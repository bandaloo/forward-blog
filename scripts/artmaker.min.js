/* artmaker forward custom version | (c) 2020, Cole Granof | MIT License */
!(function e(t, r, n) {
  function o(i, a) {
    if (!r[i]) {
      if (!t[i]) {
        var c = "function" == typeof require && require;
        if (!a && c) return c(i, !0);
        if (s) return s(i, !0);
        var u = new Error("Cannot find module '" + i + "'");
        throw ((u.code = "MODULE_NOT_FOUND"), u);
      }
      var l = (r[i] = { exports: {} });
      t[i][0].call(
        l.exports,
        function (e) {
          return o(t[i][1][e] || e);
        },
        l,
        l.exports,
        e,
        t,
        r,
        n
      );
    }
    return r[i].exports;
  }
  for (
    var s = "function" == typeof require && require, i = 0;
    i < n.length;
    i++
  )
    o(n[i]);
  return o;
})(
  {
    1: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.ArtMaker = void 0);
        const n = e("@bandaloo/merge-pass"),
          o = e("./chancetable"),
          s = e("./draws/bitgrid"),
          i = e("./draws/rosedots"),
          a = e("./effectrand"),
          c = e("./utils"),
          u = e("./rand"),
          l = e("./draws/maze"),
          p = e("./draws/branchingtree"),
          h = e("./text");
        function f(e, t, r) {
          const n = document.createElement("canvas");
          (n.width = e), (n.height = t);
          const o = n.getContext(r);
          if (null === o) throw new Error(`failed to get ${r} context`);
          return [n, o];
        }
        class d {
          constructor(
            e = c.H,
            t = Math.floor((9 * e) / 16),
            r = "art",
            n = "artcanvas"
          ) {
            (this.timeScale = 1),
              (this.downloadInfo = { run: !1 }),
              (this.text = { str: "FORWARD", style: "bold 200pt sans-serif" }),
              (this.mousePos = { x: e / 2, y: t / 2 }),
              ([this.glCanvas, this.gl] = f(e, t, "webgl2")),
              ([this.sourceCanvas, this.source] = f(e, t, "2d")),
              (this.glCanvas.id = n),
              this.glCanvas.addEventListener("mousemove", (r) => {
                const n = this.glCanvas.getBoundingClientRect();
                (this.mousePos.x = (e * (r.clientX - n.left)) / n.width),
                  (this.mousePos.y =
                    (t * (n.height - (r.clientY - n.top))) / n.height);
              });
            const o = document.getElementById(r);
            if (null === o)
              throw new Error(`could not find element with id "${r}"`);
            o.appendChild(this.glCanvas),
              this.source.scale(
                this.sourceCanvas.width / c.H,
                this.sourceCanvas.height / c.V
              );
          }
          seed(e) {
            (this.originalTime = void 0),
              this.source.restore(),
              this.source.save();
            const t = new u.Rand(e);
            this.timeScale = Math.pow(t.between(0.4, 1), 2);
            const r = [...a.randomEffects(3, t)];
            this.merger = new n.Merger(r, this.sourceCanvas, this.gl, {
              channels: [null, null],
              edgeMode: "wrap",
            });
            const c = new o.ChanceTable(t);
            c.addAll([
              [i.roseDots, 1],
              [s.bitGrid, 1],
              [l.maze, 0.5],
              [p.branchingTree, 0.5],
            ]);
            const h = () => Math.floor(256 * t.random()),
              f = t.random();
            return (
              (this.colors = {
                fore1: [h(), h(), h()],
                fore2: [h(), h(), h()],
                back:
                  f < 0.1
                    ? [h(), h(), h()]
                    : f < 0.55
                    ? [0, 0, 0]
                    : [255, 255, 255],
              }),
              (this.drawFunc = c.pick()(t, this.colors)),
              this
            );
          }
          animate() {
            void 0 !== this.curAnimationFrame &&
              (cancelAnimationFrame(this.curAnimationFrame),
              (this.curAnimationFrame = void 0));
            const e = (t) => {
              this.draw(t), (this.curAnimationFrame = requestAnimationFrame(e));
            };
            return (this.curAnimationFrame = requestAnimationFrame(e)), this;
          }
          setColor(e, t) {
            if (void 0 === this.colors)
              throw new Error("colors not defined yet");
            this.colors[e] = t;
          }
          getColor(e) {
            return void 0 !== this.colors ? this.colors[e] : [0, 0, 0];
          }
          setBackground(e) {
            this.setColor("back", e);
          }
          getBackground() {
            return this.getColor("back");
          }
          setForeground1(e) {
            this.setColor("fore1", e);
          }
          getForeground1() {
            return this.getColor("fore1");
          }
          setForeground2(e) {
            this.setColor("fore2", e);
          }
          getForeground2() {
            return this.getColor("fore2");
          }
          getTime() {
            var e, t;
            return (
              (null !== (e = this.lastTime) && void 0 !== e ? e : 0) -
              (null !== (t = this.originalTime) && void 0 !== t ? t : 0)
            );
          }
          draw(e) {
            var t;
            if (void 0 === this.colors) throw new Error("colors not defined");
            if (
              ((this.lastTime = e),
              void 0 === this.merger || void 0 === this.drawFunc)
            )
              return this.seed(), void this.draw(e);
            void 0 === this.originalTime && (this.originalTime = e);
            const r = ((e - this.originalTime) / 1e3) * this.timeScale;
            if (
              (this.drawFunc(r, this.source),
              void 0 !== this.text &&
                h.drawText(
                  r,
                  this.source,
                  this.text.str,
                  this.text.style,
                  this.colors.fore1
                ),
              this.merger.draw(r, this.mousePos.x, this.mousePos.y),
              this.downloadInfo.run)
            ) {
              const e = this.glCanvas.toDataURL("image/png", 1),
                r = document.createElement("a");
              (r.download =
                (null !== (t = this.downloadInfo.name) && void 0 !== t
                  ? t
                  : "artmaker") + ".png"),
                (r.href = e),
                r.click(),
                (this.downloadInfo.run = !1),
                (this.downloadInfo.name = void 0);
            }
            return this;
          }
          download(e) {
            (this.downloadInfo.run = !0), (this.downloadInfo.name = e);
          }
        }
        (r.ArtMaker = d), (d.seedVersion = "3");
      },
      {
        "./chancetable": 2,
        "./draws/bitgrid": 3,
        "./draws/branchingtree": 4,
        "./draws/maze": 5,
        "./draws/rosedots": 6,
        "./effectrand": 7,
        "./rand": 9,
        "./text": 10,
        "./utils": 11,
        "@bandaloo/merge-pass": 63,
      },
    ],
    2: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.ChanceTable = void 0);
        r.ChanceTable = class {
          constructor(e) {
            (this.rand = e), (this.info = new Map());
          }
          add(e, t, r = 0) {
            if (r > 0) throw new Error("decr has to be < 0");
            this.info.set(e, { weight: t, decr: r });
          }
          addAll(e) {
            for (const t of e) this.add(t[0], t[1], t[2]);
          }
          pickFromMap(e) {
            let t = 0;
            for (const r of e.values()) t += r.weight;
            let r = this.rand.random() * t,
              n = 0;
            for (const [t, o] of e.entries()) {
              if (r > n && r < n + o.weight)
                return (o.weight = Math.max(o.weight + o.decr, 0)), t;
              n += o.weight;
            }
            throw new Error("somehow nothing was chosen from chance table");
          }
          pick(e) {
            const t = new Map();
            for (const e of this.info) t.set(e[0], Object.assign({}, e[1]));
            if (void 0 === e) return this.pickFromMap(t);
            const r = [];
            for (let n = 0; n < e; n++) r.push(this.pickFromMap(t));
            return r;
          }
        };
      },
      {},
    ],
    3: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.bitGrid = void 0);
        const n = e("../chancetable"),
          o = e("../utils");
        r.bitGrid = function (e, t) {
          const r = Math.floor(e.between(15, 40)),
            s = Math.floor(e.between(15, 40)),
            i = e.random() > 0.2,
            a = (() => {
              const t = e.between(10, 50),
                r = e.between(1, 2);
              return (e, n) => ((e ^ n) / t) % r;
            })(),
            c = (() => {
              const t = e.between(1, 4);
              return (e, r) => (e & r) / t;
            })(),
            u = (() => {
              const t = e.between(3, 12),
                r = Math.floor(e.between(1, 6));
              return (e, n) => (((e - n) ^ (n + e)) / t) % r;
            })(),
            l = new n.ChanceTable(e);
          l.addAll([
            [a, 1],
            [c, 2],
            [u, 1],
          ]);
          const p = l.pick(),
            h = (() => {
              const t = e.between(0.3, 1.5),
                r = e.between(0.3, 1.5),
                n = e.between(0.3, 2),
                o = e.between(0.3, 2),
                s = e.between(1, 9),
                i = e.between(1, 9);
              return (e, a, c) =>
                t * Math.sin(n * c + s * e) + r * Math.cos(o + c + i * a);
            })(),
            f = () => 1,
            d = new n.ChanceTable(e);
          d.addAll([
            [h, 1.5],
            [f, 1],
          ]);
          const m = d.pick(),
            x = o.H / r,
            g = o.V / s,
            v = e.random() < 0.05 ? 0 : 0.25 + 9 * e.random(),
            b = e.random() < 0.5,
            w = b ? 0 : v,
            E = b ? v : 0,
            y = m !== f ? 2 : 0,
            _ = 0 !== w ? y : 0,
            V = 0 !== E ? y : 0;
          return (e, n) => {
            o.clearBackground(n, t.back);
            for (let a = 0 - _; a < r + 1 + _; a++) {
              const r = Math.floor(a + e * w),
                c = i ? (e * w) % 1 : 0;
              for (let u = 0 - V; u < s + 1 + V; u++) {
                const s = Math.floor(u + e * E),
                  l = i ? (e * E) % 1 : 0,
                  h = m(r, s, e);
                (n.fillStyle = o.R(...o.mix(t.fore1, t.fore2, p(r, s)))),
                  n.fillRect((a - c) * x, (u - l) * g, x * h, g * h);
              }
            }
          };
        };
      },
      { "../chancetable": 2, "../utils": 11 },
    ],
    4: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.branchingTree = void 0);
        const n = e("../utils");
        r.branchingTree = function (e, t) {
          const r = 60 * Math.pow(e.random(), 3),
            o = e.between(250, 400),
            s = e.between(0.8, 0.9),
            i = e.between(0.2, 2),
            a = e.between(0.2, 1.2),
            c = (e, r, o, i, a, u, l) => {
              if (u <= 0) return;
              l.strokeStyle = n.R(...n.mix(t.fore1, t.fore2, (u - 1) / 9));
              const p = e + o * Math.cos(i),
                h = r + o * Math.sin(i);
              l.beginPath(),
                l.moveTo(e, r),
                l.lineTo(p, h),
                l.stroke(),
                c(p, h, o * s, i - a, a, u - 1, l),
                c(p, h, o * s, i + a, a, u - 1, l);
            };
          return (e, s) => {
            (s.lineWidth = r),
              n.clearBackground(s, t.back),
              c(n.H / 2, n.V, o, -Math.PI / 2, a * Math.sin(i * e), 10, s);
          };
        };
      },
      { "../utils": 11 },
    ],
    5: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.maze = r.drawChar = void 0);
        const n = e("../utils");
        (r.drawChar = (e, t, r, n, o, s) => {
          const i = o * r + o / 2,
            a = s * n,
            c = s * (n + 1);
          e.beginPath(),
            e.moveTo(i - (t * o) / 2, a),
            e.lineTo(i + (t * o) / 2, c),
            e.stroke();
        }),
          (r.maze = function (e, t) {
            const o = Math.floor(e.between(10, 60)),
              s = Math.floor(e.between(10, 60)),
              i = n.H / o,
              a = n.V / s,
              c = e.between(5, 20),
              u = () => {
                const t = [...new Array(6)].map(() =>
                    Math.max(9 * Math.pow(e.random(), 4), 0.05)
                  ),
                  r = e.between(2, 15);
                return (e, n, o) =>
                  Math.cos(t[0] * o + t[1] * e + t[2] * n) +
                  Math.sin(t[3] * o + t[4] * e + t[5] * n) * r;
              },
              l = u(),
              p = u();
            return (e, u) => {
              (u.lineWidth = c), n.clearBackground(u, t.back);
              for (let c = 0; c < o; c++)
                for (let o = 0; o < s; o++)
                  (u.strokeStyle = n.R(
                    ...n.mix(
                      t.fore1,
                      t.fore2,
                      n.clamp(p(c, o, e / 3) / 9, 0, 1)
                    )
                  )),
                    r.drawChar(u, n.clamp(l(c, o, e), -1, 1), c, o, i, a);
            };
          });
      },
      { "../utils": 11 },
    ],
    6: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.roseDots = void 0);
        const n = e("../chancetable"),
          o = e("../utils");
        r.roseDots = function (e, t) {
          const r = 0.5 + e.random(),
            s = 0.8 + e.random(),
            i = e.between(0.25, 1.75),
            a = Math.floor(e.between(30, 70)),
            c = e.between(3, 15),
            u = [15 + e.int(20), e.int(20), e.int(20)],
            l = e.int(15) + 2,
            p = e.between(100, 500),
            h = new n.ChanceTable(e);
          h.addAll([
            [(e, t) => Math.tan(d * t + m * e), 1],
            [(e, t) => Math.sin(d * t + m * e), 1],
            [(e, t) => Math.pow(Math.sin(d * t + m * e), 3), 1],
            [(e, t) => i * e * t, 1],
          ]);
          const f = h.pick(),
            d = e.between(0.2, 2),
            m = e.between(0.2, 2);
          return e.random() < 0.5
            ? (e, n) => {
                o.clearBackground(n, t.back);
                for (let c = 0; c < a; c += 0.5) {
                  n.beginPath();
                  let a = 2 * o.C(2 * (2 + o.S((i * e) / 99)) * c);
                  n.arc(
                    o.H / 2 + 9 * a * o.C(c * s) * c,
                    o.V / 2 + 9 * a * o.S(c * s) * c,
                    c * r,
                    0,
                    2 * Math.PI
                  ),
                    (n.fillStyle = o.R(...o.mix(t.fore1, t.fore2, c / 50))),
                    n.fill();
                }
              }
            : (e, n) => {
                o.clearBackground(n, t.back),
                  (n.lineWidth = c),
                  n.setLineDash(u);
                for (let c = 0; c < l; c++) {
                  (n.strokeStyle = o.R(
                    ...o.mix(t.fore1, t.fore2, c / (l - 1))
                  )),
                    n.beginPath();
                  for (let t = 0; t < a; t++)
                    n.lineTo(
                      (t / (a - 1)) * o.H,
                      o.V / 2 +
                        99 * r * Math.sin(t / s + i * f(c, e)) +
                        p * ((c - (l - 1) / 2) / (l - 1))
                    );
                  n.stroke();
                }
              };
        };
      },
      { "../chancetable": 2, "../utils": 11 },
    ],
    7: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.randomEffects = void 0);
        const n = e("@bandaloo/merge-pass"),
          o = e("postpre"),
          s = e("./chancetable");
        const i = (e) => {
            const t = new s.ChanceTable(e);
            return (
              t.addAll([
                [4, 2],
                [8, 2],
                [12, 1],
                [16, 1],
                [32, 0.5],
              ]),
              o.kaleidoscope(t.pick())
            );
          },
          a = (e) => n.edge(Math.pow(-1, Math.floor(1 + 2 * e.random()))),
          c = (e) => {
            const t = 0.01 + Math.pow(e.random(), 3),
              r =
                e.random() < 0.7
                  ? n.pfloat(t)
                  : n.op(
                      n.op(
                        n.op(n.getcomp(n.nmouse(), "x"), "*", 0.5),
                        "+",
                        0.5
                      ),
                      "*",
                      2 * t
                    ),
              s = t * (0.1 + 0.2 * Math.pow(e.random(), 3)),
              i = e.between(-1.5, 1.5),
              a =
                e.random() < 0.7
                  ? n.pfloat(i)
                  : n.op(n.getcomp(n.nmouse(), "x"), "*", 2 * i),
              c =
                e.random() < 0.7
                  ? n.pfloat(s)
                  : n.op(n.getcomp(n.nmouse(), "x"), "*", 2 * s);
            return o.noisedisplacement(r, a, c);
          },
          u = () => o.foggyrays(100, 1, 0.3, 60, -1),
          l = (e) => n.motionblur(1, e.between(0.1, 0.4)),
          p = (e) => o.blurandtrace(e.between(-1, 1)),
          h = (e) => {
            const t = e.between(0.3, 0.5),
              r = e.between(1.2, 1.5);
            return n.bloom(t, 1, 1, r, 0);
          },
          f = (e) => {
            const t = Math.pow(e.between(0.01, 1), 2),
              r = n.op(n.time(), "*", t);
            return n.hsv2rgb(
              n.changecomp(
                n.rgb2hsv(n.fcolor()),
                e.random() < 0
                  ? n.op(r, "/", 2)
                  : n.op(n.a1("sin", r), "*", e.between(0.05, 0.2)),
                "r",
                "+"
              )
            );
          },
          d = (e) => {
            const t = "rgb"[e.int(3)],
              r = "xy"[e.int(2)],
              o = e.random() > 0.5 ? "+" : "-",
              i = n.pfloat(e.between(0.01, 1.5) / 10),
              a = new s.ChanceTable(e);
            a.addAll([
              [i, 1],
              [
                n.op(
                  i,
                  "*",
                  n.a1("sin", n.op(n.time(), "*", e.between(0.2, 1.3)))
                ),
                1,
              ],
              [
                n.op(
                  i,
                  "*",
                  n.getcomp(n.nmouse(), e.random() < 0.5 ? "x" : "y")
                ),
                1,
              ],
            ]);
            const c = a.pick();
            return n.channel(
              -1,
              n.changecomp(
                n.pos(),
                n.op(n.getcomp(n.fcolor(), t), "*", c),
                r,
                o
              )
            );
          },
          m = (e) => {
            const t = e.between(1, 120),
              r = e.between(5, 50) * (e.random() > 0.5 ? 1 : -1),
              o = (function (e) {
                const t = new s.ChanceTable(e);
                return (
                  t.addAll([
                    [() => n.nmouse(), 3],
                    [() => n.vec2(0.5, 0.5), 1],
                    [
                      (() => {
                        const t = (1 + e.int(5)) / 3,
                          r = (1 + e.int(5)) / 3,
                          o = n.op(
                            n.a1("sin", n.op(n.time(), "*", t)),
                            "*",
                            0.5
                          ),
                          s = n.op(
                            n.a1("cos", n.op(n.time(), "*", r)),
                            "*",
                            0.5
                          );
                        return () =>
                          n.vec2(n.op(o, "+", 0.5), n.op(s, "+", 0.5));
                      })(),
                      1,
                    ],
                  ]),
                  t.pick()()
                );
              })(e),
              i = n.op(n.len(n.op(n.pos(), "-", o)), "*", t),
              a = n.op(n.op(1, "/", n.op(1, "+", i)), "*", r),
              c = n.translate(n.pos(), n.op(o, "*", -1)),
              u = n.rotate(c, a),
              l = n.translate(u, o);
            return n.channel(-1, l);
          },
          x = (e) => {
            const t = e.int(6) + 3,
              r = e.int(6) + 3,
              o =
                e.random() < 0.5
                  ? n.vec2(t, r)
                  : n.vec2(
                      n.a1(
                        "floor",
                        n.op(n.getcomp(n.nmouse(), "x"), "*", 2 * t)
                      ),
                      n.a1(
                        "floor",
                        n.op(n.getcomp(n.nmouse(), "y"), "*", 2 * r)
                      )
                    );
            return n.channel(
              -1,
              n.a2("mod", n.op(n.pos(), "*", o), n.vec2(1, 1))
            );
          },
          g = () => o.celshade(1, 0, 0.2, 0.03),
          v = (e) => {
            const t = e.between(0.1, 0.3) * (e.random() < 0.5 ? 1 : -1),
              r = n.op(n.pixel(), "*", 0.3),
              o = e.random() < 0.5 ? r : n.op(r, "+", n.time());
            return n.brightness(n.op(n.random(o), "*", t));
          },
          b = (e) => o.vignette(),
          w = (e) => {
            const t = n.op(
              n.op(n.time(), "*", e.between(-2, 2)),
              "+",
              n.len(n.op(n.pos(), "-", 0.5))
            );
            return n.edgecolor(
              n.hsv2rgb(n.vec4(t, e.between(0.5, 1), e.between(0.5, 1), 1))
            );
          },
          E = (e) => {
            const t = n.channel(
              -1,
              n.op(
                n.pos(),
                "+",
                n.vec2(e.between(0.1, 0.5), e.between(0.1, 0.5))
              )
            );
            return n.edgecolor(t);
          },
          y = (e) => [
            n.blur2d(2, 2, 9),
            n.motionblur(0, 0.03),
            n.hsv2rgb(
              n.vec4(
                n.op(
                  n.op(
                    n.getcomp(n.rgb2hsv(n.fcolor()), "z"),
                    "*",
                    e.between(0.3, 0.9)
                  ),
                  "+",
                  e.random()
                ),
                e.between(0.2, 1),
                e.between(0.85, 1),
                1
              )
            ),
          ];
        r.randomEffects = function (e, t) {
          const r = new s.ChanceTable(t);
          return (
            r.addAll([
              [i, 2, -1 / 0],
              [c, 2.5, -1],
              [a, 1],
              [p, 0.5, -0.25],
              [b, 0.5],
              [f, 1, -1 / 0],
              [u, 3, -1 / 0],
              [l, 1, -1 / 0],
              [h, 0.25, -1 / 0],
              [g, 3, -1 / 0],
              [d, 3],
              [m, 0.5, -1 / 0],
              [x, 0.5, -1],
              [v, 1, -1 / 0],
              [w, 0.5, -1 / 0],
              [y, 0.5, -1 / 0],
              [E, 0.5, -1 / 0],
            ]),
            r
              .pick(e)
              .map((e) => e(t))
              .flat()
          );
        };
      },
      { "./chancetable": 2, "@bandaloo/merge-pass": 63, postpre: 71 },
    ],
    8: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 });
        const n = e("./artmaker");
        window.ArtMaker = n.ArtMaker;
      },
      { "./artmaker": 1 },
    ],
    9: [
      function (e, t, r) {
        "use strict";
        var n =
          (this && this.__importDefault) ||
          function (e) {
            return e && e.__esModule ? e : { default: e };
          };
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.Rand = void 0);
        const o = n(e("seedrandom"));
        class s {
          constructor(e) {
            this.rand = o.default(null != e ? e : s.randString(8));
          }
          static randString(e) {
            return [...Array(e)]
              .map(
                () =>
                  "abcdefghijklmnopqrstuvwxyz"[Math.floor(26 * Math.random())]
              )
              .join("");
          }
          between(e, t) {
            return e + (t - e) * this.rand();
          }
          int(e) {
            return Math.floor(this.rand() * e);
          }
          random() {
            return this.rand();
          }
        }
        r.Rand = s;
      },
      { seedrandom: 77 },
    ],
    10: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.drawText = void 0);
        const n = e("./utils");
        r.drawText = function (e, t, r, o, s) {
          (t.font = o),
            (t.fillStyle = n.R(...s)),
            (t.textAlign = "center"),
            (t.textBaseline = "middle"),
            t.fillText(r, n.H / 2, n.V / 2);
        };
      },
      { "./utils": 11 },
    ],
    11: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.colorVectorToHex = r.hexColorToVector = r.clamp = r.clearBackground = r.mix = r.R = r.T = r.S = r.C = r.V = r.H = void 0),
          (r.H = 1920),
          (r.V = 1080),
          (r.C = Math.cos),
          (r.S = Math.sin),
          (r.T = Math.tan),
          (r.R = (e, t, r, n = 1) => `rgba(${0 | e},${0 | t},${0 | r},${n})`),
          (r.mix = function (e, t, r) {
            return e.map((e, n) => e + (t[n] - e) * r);
          }),
          (r.clearBackground = function (e, t) {
            (e.fillStyle = r.R(...t)), e.fillRect(0, 0, r.H, r.V);
          }),
          (r.clamp = function (e, t, r) {
            return Math.min(Math.max(e, t), r);
          }),
          (r.hexColorToVector = function (e) {
            const t = (e = e.slice(1)).match(/..?/g);
            if (null === t) throw new Error("no matches for color conversion");
            if (3 !== t.length) throw new Error("wrong length for color");
            return t.map((e) => parseInt(e, 16));
          }),
          (r.colorVectorToHex = function (e) {
            return "#" + e.map((e) => e.toString(16).padStart(2, "0")).join("");
          });
      },
      {},
    ],
    12: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.CodeBuilder = r.channelSamplerName = void 0);
        const n = e("./exprs/expr"),
          o = e("./webglprogramloop"),
          s = e("./settings");
        function i(e) {
          return -1 === e ? "uSampler" : "uBufferSampler" + e;
        }
        r.channelSamplerName = i;
        r.CodeBuilder = class {
          constructor(e) {
            (this.calls = []),
              (this.externalFuncs = new Set()),
              (this.uniformDeclarations = new Set()),
              (this.counter = 0),
              (this.baseLoop = e);
            const t = {
              uniformTypes: {},
              externalFuncs: new Set(),
              exprs: [],
              needs: {
                centerSample: !1,
                neighborSample: !1,
                sceneBuffer: !1,
                timeUniform: !1,
                mouseUniform: !1,
                passCount: !1,
                extraBuffers: new Set(),
              },
            };
            this.addEffectLoop(e, 1, t);
            for (const e in t.uniformTypes) {
              const r = t.uniformTypes[e];
              this.uniformDeclarations.add(`uniform mediump ${r} ${e};`);
            }
            t.externalFuncs.forEach((e) => this.externalFuncs.add(e)),
              (this.totalNeeds = t.needs),
              (this.exprs = t.exprs);
          }
          addEffectLoop(e, t, r, o = !0) {
            const s = !o && e.loopInfo.num > 1;
            if (s) {
              const r = "i" + this.counter;
              t++;
              const n =
                "  ".repeat(t - 1) +
                `for (int ${r} = 0; ${r} < ${e.loopInfo.num}; ${r}++) {`;
              this.calls.push(n);
            }
            for (const o of e.effects)
              o instanceof n.Expr
                ? (o.parse(r),
                  this.calls.push(
                    "  ".repeat(t) + "gl_FragColor = " + o.sourceCode + ";"
                  ),
                  this.counter++)
                : this.addEffectLoop(o, t, r, !1);
            s && this.calls.push("  ".repeat(t - 1) + "}");
          }
          compileProgram(e, t, r, n = []) {
            const a = e.createShader(e.FRAGMENT_SHADER);
            if (null === a) throw new Error("problem creating fragment shader");
            const c =
              "#ifdef GL_ES\nprecision mediump float;\n#endif\n\nuniform sampler2D uSampler;\nuniform mediump vec2 uResolution;\n" +
              (this.totalNeeds.sceneBuffer
                ? "uniform sampler2D uSceneSampler;\n"
                : "") +
              (this.totalNeeds.timeUniform
                ? "uniform mediump float uTime;\n"
                : "") +
              (this.totalNeeds.mouseUniform
                ? "uniform mediump vec2 uMouse;\n"
                : "") +
              (this.totalNeeds.passCount ? "uniform int uCount;\n" : "") +
              Array.from(this.totalNeeds.extraBuffers)
                .map((e) => `uniform sampler2D ${i(e)};`)
                .join("\n") +
              "\n" +
              [...this.uniformDeclarations].join("\n") +
              "\n" +
              [...this.externalFuncs].join("\n") +
              "\nvoid main() {\n" +
              (this.totalNeeds.centerSample
                ? "  gl_FragColor = texture2D(uSampler, gl_FragCoord.xy / uResolution);\n"
                : "") +
              this.calls.join("\n") +
              "\n}";
            s.settings.verbosity > 0 && console.log(c),
              e.shaderSource(a, c),
              e.compileShader(a);
            const u = e.createProgram();
            if (null === u) throw new Error("problem creating program");
            e.attachShader(u, t), e.attachShader(u, a), n.push(a);
            const l = (t, r) => {
              const n = e.getShaderInfoLog(r);
              n && console.log(`${t} shader info log\n${n}`);
            };
            l("vertex", t), l("fragment", a), e.linkProgram(u), e.useProgram(u);
            for (const t of this.exprs)
              for (const n in t.uniformValChangeMap) {
                const t = e.getUniformLocation(u, n);
                if (null === t) throw new Error("couldn't find uniform " + n);
                void 0 === r[n] && (r[n] = { locs: [], counter: 0 }),
                  r[n].locs.push(t);
              }
            const p = e.getUniformLocation(u, "uResolution");
            if (
              (e.uniform2f(p, e.drawingBufferWidth, e.drawingBufferHeight),
              this.totalNeeds.sceneBuffer)
            ) {
              const t = e.getUniformLocation(u, "uSceneSampler");
              e.uniform1i(t, 1 + s.settings.offset);
            }
            for (const t of this.totalNeeds.extraBuffers) {
              const r = e.getUniformLocation(u, i(t));
              e.uniform1i(r, t + 2 + s.settings.offset);
            }
            if (0 !== s.settings.offset) {
              const t = e.getUniformLocation(u, "uSampler");
              e.uniform1i(t, s.settings.offset);
            }
            const h = e.getAttribLocation(u, "aPosition");
            return (
              e.enableVertexAttribArray(h),
              e.vertexAttribPointer(h, 2, e.FLOAT, !1, 0, 0),
              new o.WebGLProgramLoop(
                new o.WebGLProgramLeaf(u, this.totalNeeds, this.exprs),
                this.baseLoop.loopInfo,
                e
              )
            );
          }
        };
      },
      { "./exprs/expr": 26, "./settings": 65, "./webglprogramloop": 67 },
    ],
    13: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.a1 = r.Arity1HomogenousExpr = void 0);
        const n = e("./expr");
        class o extends n.Operator {
          constructor(e, t) {
            super(
              e,
              (function (e, t) {
                return { sections: [e + "(", ")"], values: [t] };
              })(t, e),
              ["uVal"]
            ),
              (this.val = e);
          }
          setVal(e) {
            this.setUniform("uVal" + this.id, e), (this.val = n.wrapInValue(e));
          }
        }
        (r.Arity1HomogenousExpr = o),
          (r.a1 = function (e, t) {
            return new o(n.wrapInValue(t), e);
          });
      },
      { "./expr": 26 },
    ],
    14: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.a2 = r.Arity2HomogenousExpr = void 0);
        const n = e("./expr");
        class o extends n.Operator {
          constructor(e, t, r) {
            super(
              t,
              (function (e, t, r) {
                return { sections: [e + "(", ",", ")"], values: [t, r] };
              })(e, t, r),
              ["uVal1", "uVal2"]
            ),
              (this.val1 = t),
              (this.val2 = r);
          }
          setFirstVal(e) {
            this.setUniform("uVal1" + this.id, e),
              (this.val1 = n.wrapInValue(e));
          }
          setSecondVal(e) {
            this.setUniform("uVal2" + this.id, e),
              (this.val2 = n.wrapInValue(e));
          }
        }
        (r.Arity2HomogenousExpr = o),
          (r.a2 = function (e, t, r) {
            return new o(e, n.wrapInValue(t), n.wrapInValue(r));
          });
      },
      { "./expr": 26 },
    ],
    15: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.bloom = r.BloomLoop = void 0);
        const n = e("../mergepass"),
          o = e("./arity2"),
          s = e("./blurexpr"),
          i = e("./brightnessexpr"),
          a = e("./channelsampleexpr"),
          c = e("./contrastexpr"),
          u = e("./expr"),
          l = e("./fragcolorexpr"),
          p = e("./opexpr"),
          h = e("./vecexprs");
        class f extends n.EffectLoop {
          constructor(
            e = u.float(u.mut(0.4)),
            t = u.float(u.mut(1)),
            r = u.float(u.mut(1)),
            f = u.float(u.mut(1.3)),
            d = 1,
            m = 9,
            x = 3
          ) {
            const g = u.cfloat(
                u.tag`((${a.channel(d)}.r + ${a.channel(d)}.g + ${a.channel(
                  d
                )}.b) / 3.)`
              ),
              v = o.a2("step", g, e),
              b = u.cvec4(u.tag`vec4(${a.channel(d)}.rgb * (1. - ${v}), 1.)`);
            super(
              [
                n.loop([b]).target(d),
                n
                  .loop(
                    [
                      s.gauss(h.vec2(t, 0), m),
                      s.gauss(h.vec2(0, r), m),
                      i.brightness(0.1),
                      c.contrast(f),
                    ],
                    x
                  )
                  .target(d),
                p.op(l.fcolor(), "+", a.channel(d)),
              ],
              { num: 1 }
            ),
              (this.threshold = e),
              (this.horizontal = t),
              (this.vertical = r),
              (this.boost = f);
          }
          setHorizontal(e) {
            if (!(this.horizontal instanceof u.BasicFloat))
              throw new Error("horizontal expression not basic float");
            this.horizontal.setVal(e);
          }
          setVertical(e) {
            if (!(this.vertical instanceof u.BasicFloat))
              throw new Error("vertical expression not basic float");
            this.vertical.setVal(e);
          }
          setThreshold(e) {
            if (!(this.threshold instanceof u.BasicFloat))
              throw new Error("threshold expression not basic float");
            this.threshold.setVal(e);
          }
          setBoost(e) {
            if (!(this.boost instanceof u.BasicFloat))
              throw new Error("boost expression not basic float");
            this.boost.setVal(e);
          }
        }
        (r.BloomLoop = f),
          (r.bloom = function (e, t, r, n, o, s, i) {
            return new f(
              u.wrapInValue(e),
              u.wrapInValue(t),
              u.wrapInValue(r),
              u.wrapInValue(n),
              o,
              s,
              i
            );
          });
      },
      {
        "../mergepass": 64,
        "./arity2": 14,
        "./blurexpr": 17,
        "./brightnessexpr": 18,
        "./channelsampleexpr": 20,
        "./contrastexpr": 21,
        "./expr": 26,
        "./fragcolorexpr": 27,
        "./opexpr": 44,
        "./vecexprs": 60,
      },
    ],
    16: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.blur2d = r.Blur2dLoop = void 0);
        const n = e("../mergepass"),
          o = e("./blurexpr"),
          s = e("./expr"),
          i = e("./vecexprs");
        class a extends n.EffectLoop {
          constructor(
            e = s.float(s.mut(1)),
            t = s.float(s.mut(1)),
            r = 2,
            n,
            a
          ) {
            super([o.gauss(i.vec2(e, 0), n, a), o.gauss(i.vec2(0, t), n, a)], {
              num: r,
            }),
              (this.horizontal = e),
              (this.vertical = t);
          }
          setHorizontal(e) {
            if (!(this.horizontal instanceof s.BasicFloat))
              throw new Error("horizontal expression not basic float");
            this.horizontal.setVal(e);
          }
          setVertical(e) {
            if (!(this.vertical instanceof s.BasicFloat))
              throw new Error("vertical expression not basic float");
            this.vertical.setVal(e);
          }
        }
        (r.Blur2dLoop = a),
          (r.blur2d = function (e, t, r, n, o) {
            return new a(s.wrapInValue(e), s.wrapInValue(t), r, n, o);
          });
      },
      { "../mergepass": 64, "./blurexpr": 17, "./expr": 26, "./vecexprs": 60 },
    ],
    17: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.gauss = r.BlurExpr = void 0);
        const n = e("../glslfunctions"),
          o = e("./expr");
        function s(e) {
          switch (e) {
            case 5:
              return n.glslFuncs.gauss5;
            case 9:
              return n.glslFuncs.gauss9;
            case 13:
              return n.glslFuncs.gauss13;
          }
        }
        class i extends o.ExprVec4 {
          constructor(e, t = 5, r) {
            if (![5, 9, 13].includes(t))
              throw new Error("taps for gauss blur can only be 5, 9 or 13");
            super(
              (function (e, t) {
                return { sections: [`gauss${t}(`, ")"], values: [e] };
              })(e, t),
              ["uDirection"]
            ),
              (this.direction = e),
              (this.externalFuncs = [s(t)]),
              this.brandExprWithChannel(0, r);
          }
          setDirection(e) {
            this.setUniform("uDirection" + this.id, e), (this.direction = e);
          }
        }
        (r.BlurExpr = i),
          (r.gauss = function (e, t = 5, r) {
            return new i(e, t, r);
          });
      },
      { "../glslfunctions": 62, "./expr": 26 },
    ],
    18: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.brightness = r.Brightness = void 0);
        const n = e("../glslfunctions"),
          o = e("./expr"),
          s = e("./fragcolorexpr");
        class i extends o.ExprVec4 {
          constructor(e, t = s.fcolor()) {
            super(o.tag`brightness(${e}, ${t})`, ["uBrightness", "uColor"]),
              (this.brightness = e),
              (this.externalFuncs = [n.glslFuncs.brightness]);
          }
          setBrightness(e) {
            this.setUniform("uBrightness" + this.id, e),
              (this.brightness = o.wrapInValue(e));
          }
        }
        (r.Brightness = i),
          (r.brightness = function (e, t) {
            return new i(o.wrapInValue(e), t);
          });
      },
      { "../glslfunctions": 62, "./expr": 26, "./fragcolorexpr": 27 },
    ],
    19: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.changecomp = r.ChangeCompExpr = void 0);
        const n = e("./expr"),
          o = e("./getcompexpr");
        function s(e, t, r, n, o = "") {
          return `${e} changecomp_${t}(${e} col, ${r.typeString()} setter) {\n  col.${n} ${o}= setter;\n  return col;\n}`;
        }
        function i(e, t, r) {
          if (e.length !== o.typeStringToLength(t.typeString()))
            throw new Error(
              "components length must be equal to the target float/vec"
            );
          if (
            (function (e) {
              return new Set(e.split("")).size !== e.length;
            })(e)
          )
            throw new Error("duplicate components not allowed on left side");
          o.checkLegalComponents(e, r);
        }
        class a extends n.Operator {
          constructor(e, t, r, n) {
            i(r, t, e);
            const o =
                "+" === n
                  ? "plus"
                  : "-" === n
                  ? "minus"
                  : "*" === n
                  ? "mult"
                  : "/" === n
                  ? "div"
                  : "assign",
              a = `${e.typeString()}_${t.typeString()}_${r}_${o}`;
            super(
              e,
              { sections: [`changecomp_${a}(`, ", ", ")"], values: [e, t] },
              ["uOriginal", "uNew"]
            ),
              (this.originalVec = e),
              (this.newVal = t),
              (this.externalFuncs = [s(e.typeString(), a, t, r, n)]);
          }
          setOriginal(e) {
            this.setUniform("uOriginal" + this.id, e), (this.originalVec = e);
          }
          setNew(e) {
            this.setUniform("uNew" + this.id, e),
              (this.newVal = n.wrapInValue(e));
          }
        }
        (r.ChangeCompExpr = a),
          (r.changecomp = function (e, t, r, o) {
            return new a(e, n.wrapInValue(t), r, o);
          });
      },
      { "./expr": 26, "./getcompexpr": 31 },
    ],
    20: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.channel = r.ChannelSampleExpr = void 0);
        const n = e("../codebuilder"),
          o = e("./expr"),
          s = e("./normfragcoordexpr"),
          i = e("../glslfunctions");
        class a extends o.ExprVec4 {
          constructor(e, t = s.pos()) {
            super(
              (function (e, t) {
                return {
                  sections: ["channel(", `, ${n.channelSamplerName(e)})`],
                  values: [t],
                };
              })(e, t),
              ["uVec"]
            ),
              (this.coord = t),
              (this.externalFuncs = [i.glslFuncs.channel]),
              -1 !== e
                ? (this.needs.extraBuffers = new Set([e]))
                : (this.needs.neighborSample = !0);
          }
          setCoord(e) {
            this.setUniform("uVec", e), (this.coord = e);
          }
        }
        (r.ChannelSampleExpr = a),
          (r.channel = function (e, t) {
            return new a(e, t);
          });
      },
      {
        "../codebuilder": 12,
        "../glslfunctions": 62,
        "./expr": 26,
        "./normfragcoordexpr": 42,
      },
    ],
    21: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.contrast = r.ContrastExpr = void 0);
        const n = e("../glslfunctions"),
          o = e("./expr"),
          s = e("./fragcolorexpr");
        class i extends o.ExprVec4 {
          constructor(e, t = s.fcolor()) {
            super(o.tag`contrast(${e}, ${t})`, ["uVal", "uCol"]),
              (this.contrast = e),
              (this.externalFuncs = [n.glslFuncs.contrast]);
          }
          setContrast(e) {
            this.setUniform("uContrast" + this.id, e),
              (this.contrast = o.wrapInValue(e));
          }
        }
        (r.ContrastExpr = i),
          (r.contrast = function (e, t) {
            return new i(o.wrapInValue(e), t);
          });
      },
      { "../glslfunctions": 62, "./expr": 26, "./fragcolorexpr": 27 },
    ],
    22: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.depth2occlusion = r.DepthToOcclusionExpr = void 0);
        const n = e("./channelsampleexpr"),
          o = e("./expr"),
          s = e("./vecexprs");
        class i extends o.ExprVec4 {
          constructor(
            e = n.channel(0),
            t = o.mut(s.pvec4(1, 1, 1, 1)),
            r = o.mut(o.pfloat(0.01))
          ) {
            super(o.tag`depth2occlusion(${e}, ${t}, ${r})`, [
              "uDepth",
              "uNewCol",
              "uThreshold",
            ]),
              (this.depthCol = e),
              (this.newCol = t),
              (this.threshold = r);
          }
          setDepthColor(e) {
            this.setUniform("uDepth" + this.id, e), (this.depthCol = e);
          }
          setNewColor(e) {
            this.setUniform("uNewCol" + this.id, e), (this.newCol = e);
          }
          setThreshold(e) {
            this.setUniform("uThreshold" + this.id, e),
              (this.threshold = o.wrapInValue(e));
          }
        }
        (r.DepthToOcclusionExpr = i),
          (r.depth2occlusion = function (e, t, r) {
            return new i(e, t, o.wrapInValue(r));
          });
      },
      { "./channelsampleexpr": 20, "./expr": 26, "./vecexprs": 60 },
    ],
    23: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.dof = r.DoFLoop = void 0);
        const n = e("../mergepass"),
          o = e("./arity2"),
          s = e("./blurexpr"),
          i = e("./channelsampleexpr"),
          a = e("./expr"),
          c = e("./gaussianexpr"),
          u = e("./getcompexpr"),
          l = e("./opexpr"),
          p = e("./vecexprs");
        class h extends n.EffectLoop {
          constructor(
            e = a.mut(a.pfloat(0.3)),
            t = a.mut(a.pfloat(0.01)),
            r = u.getcomp(i.channel(0), "r"),
            n = 2,
            h = 13
          ) {
            let f = c.gaussian(r, e, t);
            super(
              [
                s.gauss(p.vec2(o.a2("pow", l.op(1, "-", f), 4), 0), h),
                s.gauss(p.vec2(0, o.a2("pow", l.op(1, "-", f), 4)), h),
              ],
              { num: n }
            ),
              (this.gaussian = f);
          }
          setDepth(e) {
            this.gaussian.setA(e);
          }
          setRadius(e) {
            this.gaussian.setB(e);
          }
        }
        (r.DoFLoop = h),
          (r.dof = function (e, t, r, n) {
            return new h(
              a.wrapInValue(e),
              a.wrapInValue(t),
              a.wrapInValue(r),
              n
            );
          });
      },
      {
        "../mergepass": 64,
        "./arity2": 14,
        "./blurexpr": 17,
        "./channelsampleexpr": 20,
        "./expr": 26,
        "./gaussianexpr": 30,
        "./getcompexpr": 31,
        "./opexpr": 44,
        "./vecexprs": 60,
      },
    ],
    24: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.edgecolor = r.EdgeColorExpr = void 0);
        const n = e("./arity2"),
          o = e("./expr"),
          s = e("./fragcolorexpr"),
          i = e("./monochromeexpr"),
          a = e("./sobelexpr"),
          c = e("./vecexprs");
        class u extends o.WrappedExpr {
          constructor(e, t, r = !0) {
            const u = r
              ? o.cvec4(
                  o.tag`mix(${e}, ${s.fcolor()}, ${i.monochrome(
                    n.a2("step", c.vec4(0.5, 0.5, 0.5, 0), a.sobel(t))
                  )})`
                )
              : o.cvec4(
                  o.tag`mix(${e}, ${s.fcolor()}, ${i.monochrome(a.sobel(t))})`
                );
            super(u), (this.color = e), (this.expr = u);
          }
          setColor(e) {
            this.expr.setUniform("uCustomName0" + this.expr.id, e),
              (this.color = e);
          }
        }
        (r.EdgeColorExpr = u),
          (r.edgecolor = function (e, t, r) {
            return new u(e, t, r);
          });
      },
      {
        "./arity2": 14,
        "./expr": 26,
        "./fragcolorexpr": 27,
        "./monochromeexpr": 37,
        "./sobelexpr": 55,
        "./vecexprs": 60,
      },
    ],
    25: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.edge = r.EdgeExpr = void 0);
        const n = e("./brightnessexpr"),
          o = e("./expr"),
          s = e("./getcompexpr"),
          i = e("./invertexpr"),
          a = e("./monochromeexpr"),
          c = e("./opexpr"),
          u = e("./sobelexpr");
        class l extends o.WrappedExpr {
          constructor(e = o.mut(-1), t) {
            const r = c.op(
              s.getcomp(i.invert(a.monochrome(u.sobel(t))), "r"),
              "*",
              e
            );
            super(n.brightness(r)), (this.mult = e), (this.operator = r);
          }
          setMult(e) {
            this.operator.setRight(e), (this.mult = o.wrapInValue(e));
          }
        }
        (r.EdgeExpr = l),
          (r.edge = function (e, t) {
            const r = "dark" === e ? -1 : "light" === e ? 1 : e;
            return new l(o.wrapInValue(r), t);
          });
      },
      {
        "./brightnessexpr": 18,
        "./expr": 26,
        "./getcompexpr": 31,
        "./invertexpr": 35,
        "./monochromeexpr": 37,
        "./opexpr": 44,
        "./sobelexpr": 55,
      },
    ],
    26: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.tag = r.wrapInValue = r.pfloat = r.Operator = r.WrappedExpr = r.ExprVec4 = r.ExprVec3 = r.ExprVec2 = r.float = r.ExprFloat = r.BasicFloat = r.ExprVec = r.BasicVec4 = r.BasicVec3 = r.BasicVec2 = r.BasicVec = r.PrimitiveVec4 = r.PrimitiveVec3 = r.PrimitiveVec2 = r.PrimitiveVec = r.PrimitiveFloat = r.Primitive = r.mut = r.Mutable = r.cvec4 = r.cvec3 = r.cvec2 = r.cfloat = r.Expr = void 0);
        const n = e("../mergepass"),
          o = e("../webglprogramloop"),
          s = e("../utils");
        class i {
          constructor(e, t) {
            if (
              ((this.needs = {
                neighborSample: !1,
                centerSample: !1,
                sceneBuffer: !1,
                timeUniform: !1,
                mouseUniform: !1,
                passCount: !1,
                extraBuffers: new Set(),
              }),
              (this.uniformValChangeMap = {}),
              (this.defaultNameMap = {}),
              (this.externalFuncs = []),
              (this.sourceCode = ""),
              (this.funcIndex = 0),
              (this.regionBranded = !1),
              (this.id = "_id_" + i.count),
              i.count++,
              e.sections.length - e.values.length != 1)
            )
              throw new Error("wrong lengths for source and values");
            if (e.values.length !== t.length)
              throw (
                (console.log(e),
                console.log(t),
                new Error(
                  "default names list length doesn't match values list length"
                ))
              );
            (this.sourceLists = e), (this.defaultNames = t);
          }
          applyUniforms(e, t) {
            for (const r in this.uniformValChangeMap) {
              const n = t[r];
              this.uniformValChangeMap[r].changed &&
                this.uniformValChangeMap[r].val.applyUniform(
                  e,
                  n.locs[n.counter]
                ),
                n.counter++,
                (n.counter %= n.locs.length),
                0 === n.counter && (this.uniformValChangeMap[r].changed = !1);
            }
          }
          getSampleNum(e = 1) {
            return this.needs.neighborSample ||
              this.sourceLists.values
                .map((e) => e.getSampleNum())
                .reduce((e, t) => e + t, 0) > 0
              ? e
              : 0;
          }
          setUniform(e, t) {
            var r, n;
            const o = e;
            if (
              ("number" == typeof (t = w(t)) && (t = w(t)), !(t instanceof u))
            )
              throw new Error("cannot set a non-primitive");
            void 0 ===
              (null === (r = this.uniformValChangeMap[e]) || void 0 === r
                ? void 0
                : r.val) && (e = this.defaultNameMap[e]);
            const s =
              null === (n = this.uniformValChangeMap[e]) || void 0 === n
                ? void 0
                : n.val;
            if (void 0 === s)
              throw new Error(
                "tried to set uniform " +
                  e +
                  " which doesn't exist. original name: " +
                  o
              );
            if (s.typeString() !== t.typeString())
              throw new Error("tried to set uniform " + e + " to a new type");
            (this.uniformValChangeMap[e].val = t),
              (this.uniformValChangeMap[e].changed = !0);
          }
          parse(e) {
            (this.sourceCode = ""),
              e.exprs.push(this),
              (e.needs = o.updateNeeds(e.needs, this.needs)),
              this.externalFuncs.forEach((t) => e.externalFuncs.add(t));
            for (let t = 0; t < this.sourceLists.values.length; t++)
              this.sourceCode +=
                this.sourceLists.sections[t] +
                this.sourceLists.values[t].parse(e, this.defaultNames[t], this);
            return (
              (this.sourceCode += this.sourceLists.sections[
                this.sourceLists.sections.length - 1
              ]),
              this.sourceCode
            );
          }
          addFuncs(e) {
            return this.externalFuncs.push(...e), this;
          }
          brandExprWithChannel(e, t) {
            return (
              s.brandWithChannel(
                this.sourceLists,
                this.externalFuncs,
                this.needs,
                e,
                t
              ),
              this
            );
          }
          brandExprWithRegion(e) {
            s.brandWithRegion(this, this.funcIndex, e);
            for (const t of this.sourceLists.values) t.brandExprWithRegion(e);
            return this;
          }
        }
        function a(e) {
          const t = [];
          for (let r = 0; r < e.values.length; r++) t.push("uCustomName" + r);
          return t;
        }
        (r.Expr = i),
          (i.count = 0),
          (r.cfloat = function (e, t = []) {
            return new m(e, a(e)).addFuncs(t);
          }),
          (r.cvec2 = function (e, t = []) {
            return new x(e, a(e)).addFuncs(t);
          }),
          (r.cvec3 = function (e, t = []) {
            return new g(e, a(e)).addFuncs(t);
          }),
          (r.cvec4 = function (e, t = []) {
            return new v(e, a(e)).addFuncs(t);
          });
        class c {
          constructor(e, t) {
            (this.primitive = e), (this.name = t);
          }
          parse(e, t, r) {
            if (void 0 === r)
              throw new Error(
                "tried to put a mutable expression at the top level"
              );
            return (
              void 0 === this.name && (this.name = t + r.id),
              (e.uniformTypes[this.name] = this.primitive.typeString()),
              (r.uniformValChangeMap[this.name] = {
                val: this.primitive,
                changed: !0,
              }),
              (r.defaultNameMap[t + r.id] = this.name),
              this.name
            );
          }
          applyUniform(e, t) {
            this.primitive.applyUniform(e, t);
          }
          typeString() {
            return this.primitive.typeString();
          }
          getSampleNum() {
            return 0;
          }
          brandExprWithRegion(e) {
            return this;
          }
        }
        (r.Mutable = c),
          (r.mut = function (e, t) {
            const r = "number" == typeof e ? w(e) : e;
            return new c(r, t);
          });
        class u {
          parse() {
            return this.toString();
          }
          getSampleNum() {
            return 0;
          }
          brandExprWithRegion(e) {
            return this;
          }
        }
        r.Primitive = u;
        class l extends u {
          constructor(e) {
            if (!isFinite(e)) throw new Error("number not finite");
            super(), (this.value = e);
          }
          toString() {
            let e = "" + this.value;
            return e.includes(".") || (e += "."), e;
          }
          typeString() {
            return "float";
          }
          applyUniform(e, t) {
            e.uniform1f(t, this.value);
          }
        }
        r.PrimitiveFloat = l;
        class p extends u {
          constructor(e) {
            super(), (this.values = e);
          }
          typeString() {
            return "vec" + this.values.length;
          }
          toString() {
            return `${this.typeString()}(${this.values
              .map((e) =>
                (function (e) {
                  let t = "" + e;
                  return t.includes(".") || (t += "."), t;
                })(e)
              )
              .join(", ")})`;
          }
        }
        r.PrimitiveVec = p;
        r.PrimitiveVec2 = class extends (
          p
        ) {
          applyUniform(e, t) {
            e.uniform2f(t, this.values[0], this.values[1]);
          }
        };
        r.PrimitiveVec3 = class extends (
          p
        ) {
          applyUniform(e, t) {
            e.uniform3f(t, this.values[0], this.values[1], this.values[2]);
          }
        };
        r.PrimitiveVec4 = class extends (
          p
        ) {
          applyUniform(e, t) {
            e.uniform4f(
              t,
              this.values[0],
              this.values[1],
              this.values[2],
              this.values[3]
            );
          }
        };
        class h extends i {
          constructor(e, t) {
            super(e, t);
            const r = e.values;
            (this.values = r), (this.defaultNames = t);
          }
          typeString() {
            return "vec" + this.values.length;
          }
          setComp(e, t) {
            if (e < 0 || e >= this.values.length)
              throw new Error("out of bounds of setting component");
            this.setUniform(this.defaultNames[e] + this.id, w(t));
          }
        }
        r.BasicVec = h;
        r.BasicVec2 = class extends (
          h
        ) {
          constructor() {
            super(...arguments), (this.bvec2 = void 0);
          }
        };
        r.BasicVec3 = class extends (
          h
        ) {
          constructor() {
            super(...arguments), (this.bvec3 = void 0);
          }
        };
        r.BasicVec4 = class extends (
          h
        ) {
          constructor() {
            super(...arguments), (this.bvec4 = void 0);
          }
        };
        class f extends i {
          constructor(e, t) {
            super(e, t);
            const r = e.values;
            (this.values = r), (this.defaultNames = t);
          }
        }
        r.ExprVec = f;
        class d extends i {
          constructor(e, t) {
            super(e, t), (this.float = void 0);
          }
          setVal(e) {
            this.setUniform("uFloat" + this.id, w(e));
          }
          typeString() {
            return "float";
          }
        }
        r.BasicFloat = d;
        class m extends i {
          constructor(e, t) {
            super(e, t), (this.float = void 0);
          }
          setVal(e) {
            this.setUniform("uFloat" + this.id, w(e));
          }
          typeString() {
            return "float";
          }
        }
        (r.ExprFloat = m),
          (r.float = function (e) {
            return (
              "number" == typeof e && (e = w(e)),
              new d({ sections: ["", ""], values: [e] }, ["uFloat"])
            );
          });
        class x extends f {
          constructor() {
            super(...arguments), (this.vec2 = void 0);
          }
          typeString() {
            return "vec2";
          }
        }
        r.ExprVec2 = x;
        class g extends f {
          constructor() {
            super(...arguments), (this.vec3 = void 0);
          }
          typeString() {
            return "vec3";
          }
        }
        r.ExprVec3 = g;
        class v extends f {
          constructor() {
            super(...arguments), (this.vec4 = void 0);
          }
          repeat(e) {
            return new n.EffectLoop([this], { num: e });
          }
          genPrograms(e, t, r, o) {
            return new n.EffectLoop([this], { num: 1 }).genPrograms(e, t, r, o);
          }
          typeString() {
            return "vec4";
          }
        }
        r.ExprVec4 = v;
        r.WrappedExpr = class {
          constructor(e) {
            this.expr = e;
          }
          typeString() {
            return this.expr.typeString();
          }
          parse(e, t, r) {
            return this.expr.parse(e, t, r);
          }
          getSampleNum() {
            return this.expr.getSampleNum();
          }
          brandExprWithRegion(e) {
            return this.expr.brandExprWithRegion(e);
          }
        };
        function b(e) {
          return new l(e);
        }
        function w(e) {
          if (void 0 !== e) return "number" == typeof e ? b(e) : e;
        }
        (r.Operator = class extends (
          i
        ) {
          constructor(e, t, r) {
            super(t, r), (this.ret = e);
          }
          typeString() {
            return this.ret.typeString();
          }
        }),
          (r.pfloat = b),
          (r.wrapInValue = w),
          (r.tag = function (e, ...t) {
            return { sections: e.concat([]), values: t };
          });
      },
      { "../mergepass": 64, "../utils": 66, "../webglprogramloop": 67 },
    ],
    27: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.fcolor = r.FragColorExpr = void 0);
        const n = e("./expr");
        class o extends n.ExprVec4 {
          constructor() {
            super(n.tag`gl_FragColor`, []), (this.needs.centerSample = !0);
          }
        }
        (r.FragColorExpr = o),
          (r.fcolor = function () {
            return new o();
          });
      },
      { "./expr": 26 },
    ],
    28: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.pixel = r.FragCoordExpr = void 0);
        const n = e("./expr");
        class o extends n.ExprVec2 {
          constructor() {
            super(n.tag`gl_FragCoord.xy`, []);
          }
        }
        (r.FragCoordExpr = o),
          (r.pixel = function () {
            return new o();
          });
      },
      { "./expr": 26 },
    ],
    29: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.fxaa = void 0);
        const n = e("./expr"),
          o = e("../glslfunctions");
        class s extends n.ExprVec4 {
          constructor() {
            super(n.tag`fxaa()`, []),
              (this.externalFuncs = [o.glslFuncs.fxaa]),
              (this.needs.neighborSample = !0);
          }
        }
        r.fxaa = function () {
          return new s();
        };
      },
      { "../glslfunctions": 62, "./expr": 26 },
    ],
    30: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.gaussian = r.GaussianExpr = void 0);
        const n = e("../glslfunctions"),
          o = e("./expr");
        class s extends o.ExprFloat {
          constructor(e, t, r) {
            super(o.tag`gaussian(${e}, ${t}, ${r})`, [
              "uFloatX",
              "uFloatA",
              "uFloatB",
            ]),
              (this.x = e),
              (this.a = t),
              (this.b = r),
              (this.externalFuncs = [n.glslFuncs.gaussian]);
          }
          setX(e) {
            this.setUniform("uFloatX" + this.id, e),
              (this.x = o.wrapInValue(e));
          }
          setA(e) {
            this.setUniform("uFloatA" + this.id, e),
              (this.a = o.wrapInValue(e));
          }
          setB(e) {
            this.setUniform("uFloatB" + this.id, e),
              (this.b = o.wrapInValue(e));
          }
        }
        (r.GaussianExpr = s),
          (r.gaussian = function (e, t = 0, r = 1) {
            return new s(o.wrapInValue(e), o.wrapInValue(t), o.wrapInValue(r));
          });
      },
      { "../glslfunctions": 62, "./expr": 26 },
    ],
    31: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.get4comp = r.get3comp = r.get2comp = r.getcomp = r.Get4CompExpr = r.Get3CompExpr = r.Get2CompExpr = r.GetCompExpr = r.checkLegalComponents = r.typeStringToLength = void 0);
        const n = e("./expr");
        function o(e) {
          switch (e) {
            case "float":
              return 1;
            case "vec2":
              return 2;
            case "vec3":
              return 3;
            case "vec4":
              return 4;
          }
        }
        function s(e, t) {
          return { sections: ["", "." + t], values: [e] };
        }
        function i(e, t) {
          const r = (e, t) => {
              let r = 0,
                n = 0;
              for (const o of e) t.includes(o) ? r++ : n++;
              return r == r && !n;
            },
            n = o(t.typeString()),
            s = r(e, "rgba".substr(0, n)),
            i = r(e, "xyzw".substr(0, n)),
            a = r(e, "stpq".substr(0, n));
          if (!(s || i || a))
            throw new Error("component sets are mixed or incorrect entirely");
        }
        function a(e, t, r) {
          if (e.length > t) throw new Error("too many components");
          i(e, r);
        }
        (r.typeStringToLength = o), (r.checkLegalComponents = i);
        class c extends n.ExprFloat {
          constructor(e, t) {
            a(t, 1, e), super(s(e, t), ["uVec1Min"]), (this.vec1Min = e);
          }
          setVec(e) {
            this.setUniform("uVec1Min", e), (this.vec1Min = e);
          }
        }
        r.GetCompExpr = c;
        class u extends n.ExprVec2 {
          constructor(e, t) {
            a(t, 2, e), super(s(e, t), ["uVec2Min"]), (this.vec2Min = e);
          }
          setVec(e) {
            this.setUniform("uVec2Min", e), (this.vec2Min = e);
          }
        }
        r.Get2CompExpr = u;
        class l extends n.ExprVec3 {
          constructor(e, t) {
            a(t, 3, e), super(s(e, t), ["uVec3Min"]), (this.vec3Min = e);
          }
          setVec(e) {
            this.setUniform("uVec3Min", e), (this.vec3Min = e);
          }
        }
        r.Get3CompExpr = l;
        class p extends n.ExprVec4 {
          constructor(e, t) {
            a(t, 4, e), super(s(e, t), ["uVec4Min"]), (this.vec4Min = e);
          }
          setVec(e) {
            this.setUniform("uVec4Min", e), (this.vec4Min = e);
          }
        }
        (r.Get4CompExpr = p),
          (r.getcomp = function (e, t) {
            return new c(e, t);
          }),
          (r.get2comp = function (e, t) {
            return new u(e, t);
          }),
          (r.get3comp = function (e, t) {
            return new l(e, t);
          }),
          (r.get4comp = function (e, t) {
            return new p(e, t);
          });
      },
      { "./expr": 26 },
    ],
    32: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.godrays = r.GodRaysExpr = void 0);
        const n = e("../glslfunctions"),
          o = e("./expr"),
          s = e("./fragcolorexpr"),
          i = e("./vecexprs");
        class a extends o.ExprVec4 {
          constructor(
            e = s.fcolor(),
            t = o.mut(1),
            r = o.mut(1),
            a = o.mut(1),
            c = o.mut(0.01),
            u = o.mut(i.pvec2(0.5, 0.5)),
            l = 0,
            p = 100,
            h
          ) {
            const f = o.tag`${e}, ${t}, ${r}, ${a}, ${c}, ${u}, ${
                void 0 !== h ? h.threshold : o.float(0)
              }, ${void 0 !== h ? h.newColor : i.vec4(0, 0, 0, 0)})`,
              d = `godrays${void 0 !== h ? "_depth" : ""}${
                100 !== p ? "_s" + p : ""
              }(`;
            (f.sections[0] = d),
              super(f, [
                "uCol",
                "uExposure",
                "uDecay",
                "uDensity",
                "uWeight",
                "uLightPos",
                "uThreshold",
                "uNewColor",
              ]),
              (this.col = e),
              (this.exposure = t),
              (this.decay = r),
              (this.density = a),
              (this.weight = c),
              (this.lightPos = u),
              (this.threshold = null == h ? void 0 : h.threshold),
              (this.newColor = null == h ? void 0 : h.newColor),
              (this.funcIndex = ~~(void 0 !== h));
            let m = n.glslFuncs.godrays
              .split("godrays(")
              .join(d)
              .replace("NUM_SAMPLES = 100", "NUM_SAMPLES = " + p);
            void 0 !== h &&
              ((m = m.replace(/\/\/uncomment\s/g, "")),
              this.externalFuncs.push(n.glslFuncs.depth2occlusion)),
              this.externalFuncs.push(m),
              this.brandExprWithChannel(this.funcIndex, l);
          }
          setColor(e) {
            this.setUniform("uCol" + this.id, e), (this.col = e);
          }
          setExposure(e) {
            this.setUniform("uExposure" + this.id, e),
              (this.exposure = o.wrapInValue(e));
          }
          setDecay(e) {
            this.setUniform("uDecay" + this.id, e),
              (this.decay = o.wrapInValue(e));
          }
          setDensity(e) {
            this.setUniform("uDensity" + this.id, e),
              (this.density = o.wrapInValue(e));
          }
          setWeight(e) {
            this.setUniform("uWeight" + this.id, e),
              (this.weight = o.wrapInValue(e));
          }
          setLightPos(e) {
            this.setUniform("uLightPos" + this.id, e), (this.lightPos = e);
          }
          setThreshold(e) {
            this.setUniform("uThreshold" + this.id, e),
              (this.threshold = o.wrapInValue(e));
          }
          setNewColor(e) {
            this.setUniform("uNewColor" + this.id, e), (this.newColor = e);
          }
        }
        (r.GodRaysExpr = a),
          (r.godrays = function (e = {}) {
            return new a(
              e.color,
              o.wrapInValue(e.exposure),
              o.wrapInValue(e.decay),
              o.wrapInValue(e.density),
              o.wrapInValue(e.weight),
              e.lightPos,
              e.samplerNum,
              e.numSamples,
              void 0 === e.convertDepth
                ? void 0
                : {
                    threshold: o.wrapInValue(e.convertDepth.threshold),
                    newColor: e.convertDepth.newColor,
                  }
            );
          });
      },
      {
        "../glslfunctions": 62,
        "./expr": 26,
        "./fragcolorexpr": 27,
        "./vecexprs": 60,
      },
    ],
    33: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.grain = r.GrainExpr = void 0);
        const n = e("../glslfunctions"),
          o = e("./expr");
        class s extends o.ExprVec4 {
          constructor(e) {
            super(
              o.tag`vec4((1.0 - ${e} * random(gl_FragCoord.xy)) * gl_FragColor.rgb, gl_FragColor.a);`,
              ["uGrain"]
            ),
              (this.grain = e),
              (this.externalFuncs = [n.glslFuncs.random]),
              (this.needs.centerSample = !0);
          }
          setGrain(e) {
            this.setUniform("uGrain" + this.id, e),
              (this.grain = o.wrapInValue(e));
          }
        }
        (r.GrainExpr = s),
          (r.grain = function (e) {
            return new s(o.wrapInValue(e));
          });
      },
      { "../glslfunctions": 62, "./expr": 26 },
    ],
    34: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.hsv2rgb = r.HSVToRGBExpr = void 0);
        const n = e("./expr"),
          o = e("../glslfunctions");
        class s extends n.ExprVec4 {
          constructor(e) {
            super(n.tag`hsv2rgb(${e})`, ["uHSVCol"]),
              (this.color = e),
              (this.externalFuncs = [o.glslFuncs.hsv2rgb]);
          }
          setColor(e) {
            this.setUniform("uHSVCol", e), (this.color = e);
          }
        }
        (r.HSVToRGBExpr = s),
          (r.hsv2rgb = function (e) {
            return new s(e);
          });
      },
      { "../glslfunctions": 62, "./expr": 26 },
    ],
    35: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.invert = r.InvertExpr = void 0);
        const n = e("./expr"),
          o = e("../glslfunctions");
        class s extends n.ExprVec4 {
          constructor(e) {
            super(n.tag`invert(${e})`, ["uColor"]),
              (this.externalFuncs = [o.glslFuncs.invert]),
              (this.color = e);
          }
          setColor(e) {
            this.setUniform("uColor", e), (this.color = e);
          }
        }
        (r.InvertExpr = s),
          (r.invert = function (e) {
            return new s(e);
          });
      },
      { "../glslfunctions": 62, "./expr": 26 },
    ],
    36: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.len = r.LenExpr = void 0);
        const n = e("./expr");
        class o extends n.ExprFloat {
          constructor(e) {
            super(n.tag`length(${e})`, ["uVec"]), (this.vec = e);
          }
          setVec(e) {
            this.setUniform("uVec" + this.id, e), (this.vec = e);
          }
        }
        (r.LenExpr = o),
          (r.len = function (e) {
            return new o(e);
          });
      },
      { "./expr": 26 },
    ],
    37: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.monochrome = r.MonochromeExpr = void 0);
        const n = e("./expr"),
          o = e("../glslfunctions");
        class s extends n.ExprVec4 {
          constructor(e) {
            super(n.tag`monochrome(${e})`, ["uColor"]),
              (this.externalFuncs = [o.glslFuncs.monochrome]),
              (this.color = e);
          }
          setColor(e) {
            this.setUniform("uColor", e), (this.color = e);
          }
        }
        (r.MonochromeExpr = s),
          (r.monochrome = function (e) {
            return new s(e);
          });
      },
      { "../glslfunctions": 62, "./expr": 26 },
    ],
    38: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.motionblur = r.MotionBlurLoop = void 0);
        const n = e("../mergepass"),
          o = e("./channelsampleexpr"),
          s = e("./expr"),
          i = e("./fragcolorexpr"),
          a = e("./opexpr");
        class c extends n.EffectLoop {
          constructor(e = 0, t = s.float(s.mut(0.3))) {
            const r = a.op(o.channel(e), "*", t),
              c = a.op(i.fcolor(), "*", a.op(1, "-", t));
            super([n.loop([a.op(r, "+", c)]).target(e), o.channel(e)], {
              num: 1,
            }),
              (this.persistence = t);
          }
          setPersistence(e) {
            if (!(this.persistence instanceof s.BasicFloat))
              throw new Error("persistence expression not basic float");
            this.persistence.setVal(e);
          }
        }
        (r.MotionBlurLoop = c),
          (r.motionblur = function (e, t) {
            return new c(e, s.wrapInValue(t));
          });
      },
      {
        "../mergepass": 64,
        "./channelsampleexpr": 20,
        "./expr": 26,
        "./fragcolorexpr": 27,
        "./opexpr": 44,
      },
    ],
    39: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.mouse = r.MouseExpr = void 0);
        const n = e("./expr");
        class o extends n.ExprVec2 {
          constructor() {
            super(n.tag`uMouse`, []), (this.needs.mouseUniform = !0);
          }
        }
        (r.MouseExpr = o),
          (r.mouse = function () {
            return new o();
          });
      },
      { "./expr": 26 },
    ],
    40: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.center = r.NormCenterFragCoordExpr = void 0);
        const n = e("./expr");
        class o extends n.ExprVec2 {
          constructor() {
            super(n.tag`(gl_FragCoord.xy / uResolution - 0.5)`, []);
          }
        }
        (r.NormCenterFragCoordExpr = o),
          (r.center = function () {
            return new o();
          });
      },
      { "./expr": 26 },
    ],
    41: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.norm = r.NormExpr = void 0);
        const n = e("./expr");
        class o extends n.Operator {
          constructor(e) {
            super(e, n.tag`normalize(${e})`, ["uVec"]), (this.vec = e);
          }
          setVec(e) {
            this.setUniform("uVec" + this.id, e), (this.vec = e);
          }
        }
        (r.NormExpr = o),
          (r.norm = function (e) {
            return new o(e);
          });
      },
      { "./expr": 26 },
    ],
    42: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.pos = r.NormFragCoordExpr = void 0);
        const n = e("./expr");
        class o extends n.ExprVec2 {
          constructor() {
            super(n.tag`(gl_FragCoord.xy / uResolution)`, []);
          }
        }
        (r.NormFragCoordExpr = o),
          (r.pos = function () {
            return new o();
          });
      },
      { "./expr": 26 },
    ],
    43: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.nmouse = r.NormMouseExpr = void 0);
        const n = e("./expr");
        class o extends n.ExprVec2 {
          constructor() {
            super(n.tag`(uMouse / uResolution.xy)`, []),
              (this.needs.mouseUniform = !0);
          }
        }
        (r.NormMouseExpr = o),
          (r.nmouse = function () {
            return new o();
          });
      },
      { "./expr": 26 },
    ],
    44: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.op = r.OpExpr = void 0);
        const n = e("./expr");
        class o extends n.Operator {
          constructor(e, t, r) {
            super(
              e,
              (function (e, t, r) {
                return { sections: ["(", ` ${t} `, ")"], values: [e, r] };
              })(e, t, r),
              ["uLeft", "uRight"]
            ),
              (this.left = e),
              (this.right = r);
          }
          setLeft(e) {
            this.setUniform("uLeft" + this.id, e),
              (this.left = n.wrapInValue(e));
          }
          setRight(e) {
            this.setUniform("uRight" + this.id, e),
              (this.right = n.wrapInValue(e));
          }
        }
        (r.OpExpr = o),
          (r.op = function (e, t, r) {
            return new o(n.wrapInValue(e), t, n.wrapInValue(r));
          });
      },
      { "./expr": 26 },
    ],
    45: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.fractalize = r.perlin = r.PerlinExpr = void 0);
        const n = e("../glslfunctions"),
          o = e("./expr"),
          s = e("./opexpr");
        class i extends o.ExprFloat {
          constructor(e) {
            super(o.tag`gradientnoise(${e})`, ["uPos"]),
              (this.pos = e),
              (this.externalFuncs = [
                n.glslFuncs.random2,
                n.glslFuncs.gradientnoise,
              ]);
          }
          setPos(e) {
            this.setUniform("uPos", e), (this.pos = e);
          }
        }
        (r.PerlinExpr = i),
          (r.perlin = function (e) {
            return new i(e);
          }),
          (r.fractalize = function (e, t, r) {
            if (t < 0) throw new Error("octaves can't be < 0");
            const n = (e, t, i) =>
              i <= 0
                ? o.pfloat(0)
                : s.op(r(s.op(e, "/", 2 * t)), "+", n(e, t / 2, i - 1));
            return n(e, 0.5, t);
          });
      },
      { "../glslfunctions": 62, "./expr": 26, "./opexpr": 44 },
    ],
    46: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.pblur = r.PowerBlurLoop = void 0);
        const n = e("../mergepass"),
          o = e("./blurexpr"),
          s = e("./vecexprs"),
          i = e("./expr"),
          a = (e, t) => Math.log(t) / Math.log(e);
        class c extends n.EffectLoop {
          constructor(e) {
            const t = o.gauss(i.mut(s.pvec2(e, 0))),
              r = o.gauss(i.mut(s.pvec2(0, e))),
              n = Math.ceil(a(2, e));
            super([t, r], { num: n + 1 }),
              (this.size = e),
              (this.loopInfo.func = (e) => {
                const n = this.size / Math.pow(2, e);
                r.setDirection(s.pvec2(0, n)), t.setDirection(s.pvec2(n, 0));
              });
          }
          setSize(e) {
            (this.size = e), (this.loopInfo.num = Math.ceil(a(2, e)));
          }
        }
        (r.PowerBlurLoop = c),
          (r.pblur = function (e) {
            return new c(e);
          });
      },
      { "../mergepass": 64, "./blurexpr": 17, "./expr": 26, "./vecexprs": 60 },
    ],
    47: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.random = r.RandomExpr = void 0);
        const n = e("../glslfunctions"),
          o = e("./expr"),
          s = e("./normfragcoordexpr");
        class i extends o.ExprFloat {
          constructor(e = s.pos()) {
            super(o.tag`random(${e})`, ["uSeed"]),
              (this.seed = e),
              (this.externalFuncs = [n.glslFuncs.random]);
          }
          setSeed(e) {
            this.setUniform("uSeed", e), (this.seed = e);
          }
        }
        (r.RandomExpr = i),
          (r.random = function (e) {
            return new i(e);
          });
      },
      { "../glslfunctions": 62, "./expr": 26, "./normfragcoordexpr": 42 },
    ],
    48: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.region = void 0);
        const n = e("../mergepass"),
          o = e("./expr"),
          s = e("./getcompexpr"),
          i = e("./normfragcoordexpr"),
          a = e("./opexpr"),
          c = e("./ternaryexpr"),
          u = e("./fragcolorexpr");
        r.region = function (e, t, r, l = !1) {
          const p = Array.isArray(e)
            ? e.map((e) => o.wrapInValue(e))
            : "number" == typeof e
            ? o.wrapInValue(e)
            : e;
          return (
            r instanceof n.EffectLoop &&
              (t instanceof n.EffectLoop || (([t, r] = [r, t]), (l = !l))),
            t instanceof n.EffectLoop
              ? r instanceof n.EffectLoop
                ? n.loop([
                    t.regionWrap(p, u.fcolor(), !1, l),
                    r.regionWrap(p, u.fcolor(), !0, !l),
                  ])
                : t.regionWrap(p, r, !0, l)
              : c.ternary(
                  Array.isArray(p)
                    ? (function (e) {
                        const t = [];
                        if (4 !== e.length)
                          throw new Error(
                            "incorrect amount of points specified for region"
                          );
                        for (let r = 0; r < 2; r++)
                          t.push(a.op(s.getcomp(i.pos(), "xy"[r]), "-", e[r]));
                        for (let r = 2; r < e.length; r++)
                          t.push(
                            a.op(e[r], "-", s.getcomp(i.pos(), "xy"[r - 2]))
                          );
                        return t;
                      })(p)
                    : p,
                  t.brandExprWithRegion(p),
                  r.brandExprWithRegion(p),
                  l
                )
          );
        };
      },
      {
        "../mergepass": 64,
        "./expr": 26,
        "./fragcolorexpr": 27,
        "./getcompexpr": 31,
        "./normfragcoordexpr": 42,
        "./opexpr": 44,
        "./ternaryexpr": 56,
      },
    ],
    49: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.resolution = r.ResolutionExpr = void 0);
        const n = e("./expr");
        class o extends n.ExprVec2 {
          constructor() {
            super(n.tag`uResolution`, []);
          }
        }
        (r.ResolutionExpr = o),
          (r.resolution = function () {
            return new o();
          });
      },
      { "./expr": 26 },
    ],
    50: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.rgb2hsv = r.RGBToHSVExpr = void 0);
        const n = e("./expr"),
          o = e("../glslfunctions");
        class s extends n.ExprVec4 {
          constructor(e) {
            super(n.tag`rgb2hsv(${e})`, ["uRGBCol"]),
              (this.color = e),
              (this.externalFuncs = [o.glslFuncs.rgb2hsv]);
          }
          setColor(e) {
            this.setUniform("uRGBCol", e), (this.color = e);
          }
        }
        (r.RGBToHSVExpr = s),
          (r.rgb2hsv = function (e) {
            return new s(e);
          });
      },
      { "../glslfunctions": 62, "./expr": 26 },
    ],
    51: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.rotate = r.RotateExpr = void 0);
        const n = e("../glslfunctions"),
          o = e("./expr");
        class s extends o.ExprVec2 {
          constructor(e, t) {
            super(o.tag`rotate2d(${e}, ${t})`, ["uVec", "uAngle"]),
              (this.vec = e),
              (this.angle = t),
              (this.externalFuncs = [n.glslFuncs.rotate2d]);
          }
          setVec(e) {
            this.setUniform("uVec" + this.id, e), (this.vec = e);
          }
          setAngle(e) {
            this.setUniform("uAngle" + this.id, e),
              (this.angle = o.wrapInValue(e));
          }
        }
        (r.RotateExpr = s),
          (r.rotate = function (e, t) {
            return new s(e, o.wrapInValue(t));
          });
      },
      { "../glslfunctions": 62, "./expr": 26 },
    ],
    52: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.input = r.SceneSampleExpr = void 0);
        const n = e("./expr"),
          o = e("./normfragcoordexpr");
        class s extends n.ExprVec4 {
          constructor(e = o.pos()) {
            super(n.tag`texture2D(uSceneSampler, ${e})`, ["uCoord"]),
              (this.coord = e),
              (this.needs.sceneBuffer = !0);
          }
          setCoord(e) {
            this.setUniform("uCoord", e), (this.coord = e);
          }
        }
        (r.SceneSampleExpr = s),
          (r.input = function (e) {
            return new s(e);
          });
      },
      { "./expr": 26, "./normfragcoordexpr": 42 },
    ],
    53: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.SetColorExpr = void 0);
        const n = e("./expr");
        class o extends n.ExprVec4 {
          constructor(e) {
            super(n.tag`(${e})`, ["uVal"]), (this.vec = e);
          }
        }
        r.SetColorExpr = o;
      },
      { "./expr": 26 },
    ],
    54: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.simplex = r.SimplexNoise = void 0);
        const n = e("../glslfunctions"),
          o = e("./expr");
        class s extends o.ExprFloat {
          constructor(e) {
            super(o.tag`simplexnoise(${e})`, ["uPos"]),
              (this.pos = e),
              (this.externalFuncs = [
                n.glslFuncs.simplexhelpers,
                n.glslFuncs.simplexnoise,
              ]);
          }
          setPos(e) {
            this.setUniform("uPos", e), (this.pos = e);
          }
        }
        (r.SimplexNoise = s),
          (r.simplex = function (e) {
            return new s(e);
          });
      },
      { "../glslfunctions": 62, "./expr": 26 },
    ],
    55: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.sobel = r.SobelExpr = void 0);
        const n = e("../glslfunctions"),
          o = e("./expr");
        class s extends o.ExprVec4 {
          constructor(e) {
            super(o.tag`sobel()`, []),
              (this.externalFuncs = [n.glslFuncs.sobel]),
              this.brandExprWithChannel(0, e);
          }
        }
        (r.SobelExpr = s),
          (r.sobel = function (e) {
            return new s(e);
          });
      },
      { "../glslfunctions": 62, "./expr": 26 },
    ],
    56: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.ternary = r.TernaryExpr = void 0);
        const n = e("./expr");
        class o extends n.Operator {
          constructor(e, t, r, n) {
            super(
              t,
              (function (e, t, r, n) {
                const o = { sections: [`(${n ? "!" : ""}(`], values: [] };
                let s = 0;
                if (null !== e)
                  for (const t of e) {
                    s++;
                    const r = s === e.length;
                    o.values.push(t),
                      o.sections.push(" > 0." + (r ? ") ? " : " && "));
                  }
                else o.sections[0] += "uCount == 0) ? ";
                return (
                  o.values.push(t),
                  o.sections.push(" : "),
                  o.values.push(r),
                  o.sections.push(")"),
                  o
                );
              })(e, t, r, n),
              [
                ...(null !== e ? Array.from(e, (e, t) => "uFloat" + t) : []),
                "uSuccess",
                "uFailure",
              ]
            ),
              (this.success = t),
              (this.failure = r),
              (this.needs.passCount = null === e);
          }
        }
        (r.TernaryExpr = o),
          (r.ternary = function (e, t, r, s = !1) {
            return (
              Array.isArray(e) ||
                null === e ||
                (e = [e].map((e) => n.wrapInValue(e))),
              new o(e, n.wrapInValue(t), n.wrapInValue(r), s)
            );
          });
      },
      { "./expr": 26 },
    ],
    57: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.time = r.TimeExpr = void 0);
        const n = e("./expr");
        class o extends n.ExprFloat {
          constructor() {
            super(n.tag`uTime`, []), (this.needs.timeUniform = !0);
          }
        }
        (r.TimeExpr = o),
          (r.time = function () {
            return new o();
          });
      },
      { "./expr": 26 },
    ],
    58: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.translate = r.TranslateExpr = void 0);
        const n = e("./expr");
        class o extends n.ExprVec2 {
          constructor(e, t) {
            super(n.tag`(${e} + ${t})`, ["uVec", "uPos"]),
              (this.vec = e),
              (this.pos = t);
          }
          setVec(e) {
            this.setUniform("uVec" + this.id, e), (this.vec = e);
          }
          setPos(e) {
            this.setUniform("uPos" + this.id, e), (this.pos = e);
          }
        }
        (r.TranslateExpr = o),
          (r.translate = function (e, t) {
            return new o(e, t);
          });
      },
      { "./expr": 26 },
    ],
    59: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.truedepth = r.TrueDepthExpr = void 0);
        const n = e("./expr"),
          o = e("../glslfunctions");
        class s extends n.ExprFloat {
          constructor(e) {
            super(n.tag`truedepth(${e})`, ["uDist"]),
              (this.depth = e),
              (this.externalFuncs = [o.glslFuncs.truedepth]);
          }
          setDist(e) {
            this.setUniform("uDist", e), (this.depth = n.wrapInValue(e));
          }
        }
        (r.TrueDepthExpr = s),
          (r.truedepth = function (e) {
            return new s(n.wrapInValue(e));
          });
      },
      { "../glslfunctions": 62, "./expr": 26 },
    ],
    60: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.pvec4 = r.pvec3 = r.pvec2 = r.vec4 = r.vec3 = r.vec2 = void 0);
        const n = e("./expr");
        function o(...e) {
          const t = ["vec" + e.length + "("];
          for (let r = 0; r < e.length - 1; r++) t.push(", ");
          const r = [];
          for (let t = 0; t < e.length; t++) r.push("uComp" + t);
          return t.push(")"), [{ sections: t, values: e }, r];
        }
        (r.vec2 = function (e, t) {
          return new n.BasicVec2(...o(...[e, t].map((e) => n.wrapInValue(e))));
        }),
          (r.vec3 = function (e, t, r) {
            return new n.BasicVec3(
              ...o(...[e, t, r].map((e) => n.wrapInValue(e)))
            );
          }),
          (r.vec4 = function (e, t, r, s) {
            return new n.BasicVec4(
              ...o(...[e, t, r, s].map((e) => n.wrapInValue(e)))
            );
          }),
          (r.pvec2 = function (e, t) {
            return new n.PrimitiveVec2([e, t]);
          }),
          (r.pvec3 = function (e, t, r) {
            return new n.PrimitiveVec3([e, t, r]);
          }),
          (r.pvec4 = function (e, t, r, o) {
            return new n.PrimitiveVec4([e, t, r, o]);
          });
      },
      { "./expr": 26 },
    ],
    61: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 });
      },
      {},
    ],
    62: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.glslFuncs = void 0),
          (r.glslFuncs = {
            texture2D_region:
              "vec4 texture2D_region(\n  float r_x_min,\n  float r_y_min,\n  float r_x_max,\n  float r_y_max,\n  sampler2D sampler,\n  vec2 uv\n) {\n  vec2 d = vec2(1., 1.) / uResolution; // pixel width\n  return texture2D(sampler, clamp(uv, vec2(r_x_min + d.x, r_y_min + d.x), vec2(r_x_max - d.y, r_y_max - d.y)));\n}",
            random:
              "float random(vec2 st) {\n  return fract(sin(dot(st.xy / 99., vec2(12.9898, 78.233))) * 43758.5453123);\n}",
            random2:
              "vec2 random2(vec2 st) {\n  st = vec2(dot(st,vec2(127.1,311.7)), dot(st,vec2(269.5,183.3)));\n  return -1.0 + 2.0*fract(sin(st)*43758.5453123);\n}",
            rotate2d:
              "vec2 rotate2d(vec2 v, float angle) {\n  return mat2(cos(angle), -sin(angle), sin(angle), cos(angle)) * v;\n}",
            hsv2rgb:
              "vec4 hsv2rgb(vec4 co){\n  vec3 c = co.xyz;\n  vec3 rgb = clamp(abs(mod(\n    c.x * 6.0 + vec3(0.0, 4.0, 2.0), 6.0) - 3.0) - 1.0, 0.0, 1.0);\n  rgb = rgb * rgb * (3.0 - 2.0 * rgb);\n  vec3 hsv = c.z * mix(vec3(1.0), rgb, c.y);\n  return vec4(hsv.x, hsv.y, hsv.z, co.a);\n}",
            rgb2hsv:
              "vec4 rgb2hsv(vec4 co){\n  vec3 c = co.rgb;\n  vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n  vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n  vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n  float d = q.x - min(q.w, q.y);\n  float e = 1.0e-10;\n  return vec4(abs(q.z + (q.w - q.y) / (6.0 * d + e)),\n              d / (q.x + e),\n              q.x, co.a);\n}",
            gauss5:
              "vec4 gauss5(vec2 dir) {\n  vec2 uv = gl_FragCoord.xy / uResolution;\n  vec4 col = vec4(0.0);\n  vec2 off1 = vec2(1.3333333333333333) * dir;\n  col += texture2D(uSampler, uv) * 0.29411764705882354;\n  col += texture2D(uSampler, uv + (off1 / uResolution)) * 0.35294117647058826;\n  col += texture2D(uSampler, uv - (off1 / uResolution)) * 0.35294117647058826;\n  return col;\n}",
            gauss9:
              "vec4 gauss9(vec2 dir) {\n  vec2 uv = gl_FragCoord.xy / uResolution;\n  vec4 col = vec4(0.0);\n  vec2 off1 = vec2(1.3846153846) * dir;\n  vec2 off2 = vec2(3.2307692308) * dir;\n  col += texture2D(uSampler, uv) * 0.2270270270;\n  col += texture2D(uSampler, uv + (off1 / uResolution)) * 0.3162162162;\n  col += texture2D(uSampler, uv - (off1 / uResolution)) * 0.3162162162;\n  col += texture2D(uSampler, uv + (off2 / uResolution)) * 0.0702702703;\n  col += texture2D(uSampler, uv - (off2 / uResolution)) * 0.0702702703;\n  return col;\n}",
            gauss13:
              "vec4 gauss13(vec2 dir) {\n  vec2 uv = gl_FragCoord.xy / uResolution;\n  vec4 col = vec4(0.0);\n  vec2 off1 = vec2(1.411764705882353) * dir;\n  vec2 off2 = vec2(3.2941176470588234) * dir;\n  vec2 off3 = vec2(5.176470588235294) * dir;\n  col += texture2D(uSampler, uv) * 0.1964825501511404;\n  col += texture2D(uSampler, uv + (off1 / uResolution)) * 0.2969069646728344;\n  col += texture2D(uSampler, uv - (off1 / uResolution)) * 0.2969069646728344;\n  col += texture2D(uSampler, uv + (off2 / uResolution)) * 0.09447039785044732;\n  col += texture2D(uSampler, uv - (off2 / uResolution)) * 0.09447039785044732;\n  col += texture2D(uSampler, uv + (off3 / uResolution)) * 0.010381362401148057;\n  col += texture2D(uSampler, uv - (off3 / uResolution)) * 0.010381362401148057;\n  return col;\n}",
            contrast:
              "vec4 contrast(float val, vec4 col) {\n  col.rgb /= col.a;\n  col.rgb = ((col.rgb - 0.5) * val) + 0.5;\n  col.rgb *= col.a;\n  return col;\n}",
            brightness:
              "vec4 brightness(float val, vec4 col) {\n  col.rgb /= col.a;\n  col.rgb += val;\n  col.rgb *= col.a;\n  return col;\n}",
            fxaa:
              "vec4 fxaa() {\n  float FXAA_SPAN_MAX = 8.0;\n  float FXAA_REDUCE_MUL = 1.0 / FXAA_SPAN_MAX;\n  float FXAA_REDUCE_MIN = 1.0 / 128.0;\n  float FXAA_SUBPIX_SHIFT = 1.0 / 4.0;\n\n  vec2 rcpFrame = 1. / uResolution.xy;\n  vec2 t_uv = gl_FragCoord.xy / uResolution.xy; \n  vec4 uv = vec4(t_uv, t_uv - (rcpFrame * (0.5 + FXAA_SUBPIX_SHIFT)));\n\n  vec3 rgbNW = texture2D(uSampler, uv.zw).xyz;\n  vec3 rgbNE = texture2D(uSampler, uv.zw + vec2(1,0) * rcpFrame.xy).xyz;\n  vec3 rgbSW = texture2D(uSampler, uv.zw + vec2(0,1) * rcpFrame.xy).xyz;\n  vec3 rgbSE = texture2D(uSampler, uv.zw + vec2(1,1) * rcpFrame.xy).xyz;\n  vec4 rgbMfull = texture2D(uSampler, uv.xy);\n  vec3 rgbM = rgbMfull.xyz;\n  float alpha = rgbMfull.a;\n\n  vec3 luma = vec3(0.299, 0.587, 0.114);\n  float lumaNW = dot(rgbNW, luma);\n  float lumaNE = dot(rgbNE, luma);\n  float lumaSW = dot(rgbSW, luma);\n  float lumaSE = dot(rgbSE, luma);\n  float lumaM = dot(rgbM,  luma);\n\n  float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));\n  float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));\n\n  vec2 dir;\n  dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\n  dir.y = ((lumaNW + lumaSW) - (lumaNE + lumaSE));\n\n  float dirReduce = max(\n    (lumaNW + lumaNE + lumaSW + lumaSE) * (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);\n  float rcpDirMin = 1.0/(min(abs(dir.x), abs(dir.y)) + dirReduce);\n\n  dir = min(vec2(FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\n    max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\n    dir * rcpDirMin)) * rcpFrame.xy;\n\n  vec3 rgbA = (1.0 / 2.0) * (\n    texture2D(uSampler, uv.xy + dir * (1.0 / 3.0 - 0.5)).xyz +\n    texture2D(uSampler, uv.xy + dir * (2.0 / 3.0 - 0.5)).xyz);\n  vec3 rgbB = rgbA * (1.0 / 2.0) + (1.0 / 4.0) * (\n    texture2D(uSampler, uv.xy + dir * (0.0 / 3.0 - 0.5)).xyz +\n    texture2D(uSampler, uv.xy + dir * (3.0 / 3.0 - 0.5)).xyz);\n\n  float lumaB = dot(rgbB, luma);\n\n  if (lumaB < lumaMin || lumaB > lumaMax) {\n    return vec4(rgbA.r, rgbA.g, rgbA.b, alpha);\n  }\n\n  return vec4(rgbB.r, rgbB.g, rgbB.b, alpha);\n}",
            gaussian:
              "float gaussian(float x, float a, float b) {\n  float e = 2.71828;\n  return pow(e, -pow(x - a, 2.) / b);\n}",
            truedepth:
              "float truedepth(float i) {\n  i = max(i, 0.00000001);\n  return (1. - i) / i;\n}",
            godrays:
              "vec4 godrays(\n  vec4 col,\n  float exposure,\n  float decay,\n  float density,\n  float weight,\n  vec2 lightPos,\n  float threshold,\n  vec4 newColor\n) {\n  vec2 texCoord = gl_FragCoord.xy / uResolution;\n  vec2 deltaTexCoord = texCoord - lightPos;\n\n  const int NUM_SAMPLES = 100;\n  deltaTexCoord *= 1. / float(NUM_SAMPLES) * density;\n  float illuminationDecay = 1.0;\n\n  for (int i=0; i < NUM_SAMPLES; i++) {\n    texCoord -= deltaTexCoord;\n    vec4 sample = texture2D(uSampler, texCoord);\n    //uncomment sample = depth2occlusion(sample, newColor, threshold);\n    sample *= illuminationDecay * weight;\n    col += sample;\n    illuminationDecay *= decay;\n  }\n  return col * exposure;\n}",
            depth2occlusion:
              "vec4 depth2occlusion(vec4 depthCol, vec4 newCol, float threshold) {\n  float red = 1. - ceil(depthCol.r - threshold);\n  return vec4(newCol.rgb * red, 1.0);\n}",
            gradientnoise:
              "float gradientnoise(vec2 st) {\n  vec2 i = floor(st);\n  vec2 f = fract(st);\n\n  vec2 u = f * f * (3.0 - 2.0 * f);\n\n  return mix(mix(dot(random2(i + vec2(0.0,0.0)), f - vec2(0.0, 0.0)),\n                     dot(random2(i + vec2(1.0,0.0)), f - vec2(1.0, 0.0)), u.x),\n             mix(dot(random2(i + vec2(0.0,1.0)), f - vec2(0.0, 1.0)),\n                 dot(random2(i + vec2(1.0,1.0)), f - vec2(1.0, 1.0)), u.x), u.y);\n}",
            simplexnoise:
              "float simplexnoise(vec2 v) {\n  // Precompute values for skewed triangular grid\n  const vec4 C = vec4(0.211324865405187,\n                      // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,\n                      // 0.5*(sqrt(3.0)-1.0)\n                      -0.577350269189626,\n                      // -1.0 + 2.0 * C.x\n                      0.024390243902439);\n                      // 1.0 / 41.0\n\n  // First corner (x0)\n  vec2 i  = floor(v + dot(v, C.yy));\n  vec2 x0 = v - i + dot(i, C.xx);\n\n  // Other two corners (x1, x2)\n  vec2 i1 = vec2(0.0);\n  i1 = (x0.x > x0.y)? vec2(1.0, 0.0):vec2(0.0, 1.0);\n  vec2 x1 = x0.xy + C.xx - i1;\n  vec2 x2 = x0.xy + C.zz;\n\n  // Do some permutations to avoid\n  // truncation effects in permutation\n  i = mod289_2(i);\n  vec3 p = permute(\n          permute( i.y + vec3(0.0, i1.y, 1.0))\n              + i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(\n                      dot(x0,x0),\n                      dot(x1,x1),\n                      dot(x2,x2)\n                      ), 0.0);\n\n  m = m*m ;\n  m = m*m ;\n\n  // Gradients:\n  //  41 pts uniformly over a line, mapped onto a diamond\n  //  The ring size 17*17 = 289 is close to a multiple\n  //      of 41 (41*7 = 287)\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n  // Normalise gradients implicitly by scaling m\n  // Approximation of: m *= inversesqrt(a0*a0 + h*h);\n  m *= 1.79284291400159 - 0.85373472095314 * (a0*a0+h*h);\n\n  // Compute final noise value at P\n  vec3 g = vec3(0.0);\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * vec2(x1.x,x2.x) + h.yz * vec2(x1.y,x2.y);\n  return 130.0 * dot(m, g);\n}",
            simplexhelpers:
              "vec3 mod289_3(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec2 mod289_2(vec2 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; }\nvec3 permute(vec3 x) { return mod289_3(((x*34.0)+1.0)*x); }",
            sobel:
              "vec4 sobel() {\n  vec2 uv = gl_FragCoord.xy / uResolution;\n  vec4 k[8];\n\n  float w = 1. / uResolution.x;\n  float h = 1. / uResolution.y;\n\n  k[0] = texture2D(uSampler, uv + vec2(-w, -h));\n  k[1] = texture2D(uSampler, uv + vec2(0., -h));\n  k[2] = texture2D(uSampler, uv + vec2(w, -h));\n  k[3] = texture2D(uSampler, uv + vec2(-w, 0.));\n\n  k[4] = texture2D(uSampler, uv + vec2(w, 0.));\n  k[5] = texture2D(uSampler, uv + vec2(-w, h));\n  k[6] = texture2D(uSampler, uv + vec2(0., h));\n  k[7] = texture2D(uSampler, uv + vec2(w, h));\n\n  vec4 edge_h = k[2] + (2. * k[4]) + k[7] - (k[0] + (2. * k[3]) + k[5]);\n  vec4 edge_v = k[0] + (2. * k[1]) + k[2] - (k[5] + (2. * k[6]) + k[7]);\n  vec4 sob = sqrt(edge_h * edge_h + edge_v * edge_v);\n\n  return vec4(1. - sob.rgb, 1.);\n}",
            monochrome:
              "vec4 monochrome(vec4 col) {\n  return vec4(vec3((col.r + col.g + col.b) / 3.), col.a);\n}",
            invert:
              "vec4 invert(vec4 col) {\n  return vec4(vec3(1., 1., 1.) - col.rgb, col.a);\n}",
            channel:
              "vec4 channel(vec2 uv, sampler2D sampler) {\n  return texture2D(sampler, uv);\n}",
          });
      },
      {},
    ],
    63: [
      function (e, t, r) {
        "use strict";
        var n =
            (this && this.__createBinding) ||
            (Object.create
              ? function (e, t, r, n) {
                  void 0 === n && (n = r),
                    Object.defineProperty(e, n, {
                      enumerable: !0,
                      get: function () {
                        return t[r];
                      },
                    });
                }
              : function (e, t, r, n) {
                  void 0 === n && (n = r), (e[n] = t[r]);
                }),
          o =
            (this && this.__exportStar) ||
            function (e, t) {
              for (var r in e)
                "default" === r || t.hasOwnProperty(r) || n(t, e, r);
            };
        Object.defineProperty(r, "__esModule", { value: !0 }),
          o(e("./mergepass"), r),
          o(e("./exprtypes"), r),
          o(e("./glslfunctions"), r),
          o(e("./settings"), r),
          o(e("./exprs/blurexpr"), r),
          o(e("./exprs/fragcolorexpr"), r),
          o(e("./exprs/vecexprs"), r),
          o(e("./exprs/opexpr"), r),
          o(e("./exprs/powerblur"), r),
          o(e("./exprs/blur2dloop"), r),
          o(e("./exprs/lenexpr"), r),
          o(e("./exprs/normexpr"), r),
          o(e("./exprs/fragcoordexpr"), r),
          o(e("./exprs/normfragcoordexpr"), r),
          o(e("./exprs/normcenterfragcoordexpr"), r),
          o(e("./exprs/scenesampleexpr"), r),
          o(e("./exprs/brightnessexpr"), r),
          o(e("./exprs/contrastexpr"), r),
          o(e("./exprs/grainexpr"), r),
          o(e("./exprs/getcompexpr"), r),
          o(e("./exprs/changecompexpr"), r),
          o(e("./exprs/rgbtohsvexpr"), r),
          o(e("./exprs/hsvtorgbexpr"), r),
          o(e("./exprs/timeexpr"), r),
          o(e("./exprs/arity1"), r),
          o(e("./exprs/arity2"), r),
          o(e("./exprs/fxaaexpr"), r),
          o(e("./exprs/channelsampleexpr"), r),
          o(e("./exprs/dofloop"), r),
          o(e("./exprs/truedepthexpr"), r),
          o(e("./exprs/godraysexpr"), r),
          o(e("./exprs/depthtoocclusionexpr"), r),
          o(e("./exprs/resolutionexpr"), r),
          o(e("./exprs/mouseexpr"), r),
          o(e("./exprs/rotateexpr"), r),
          o(e("./exprs/translateexpr"), r),
          o(e("./exprs/normmouseexpr"), r),
          o(e("./exprs/perlinexpr"), r),
          o(e("./exprs/simplexexpr"), r),
          o(e("./exprs/motionblurloop"), r),
          o(e("./exprs/randomexpr"), r),
          o(e("./exprs/sobelexpr"), r),
          o(e("./exprs/bloomloop"), r),
          o(e("./exprs/monochromeexpr"), r),
          o(e("./exprs/invertexpr"), r),
          o(e("./exprs/edgeexpr"), r),
          o(e("./exprs/edgecolorexpr"), r),
          o(e("./exprs/ternaryexpr"), r),
          o(e("./exprs/regiondecorator"), r),
          o(e("./exprs/expr"), r);
      },
      {
        "./exprs/arity1": 13,
        "./exprs/arity2": 14,
        "./exprs/bloomloop": 15,
        "./exprs/blur2dloop": 16,
        "./exprs/blurexpr": 17,
        "./exprs/brightnessexpr": 18,
        "./exprs/changecompexpr": 19,
        "./exprs/channelsampleexpr": 20,
        "./exprs/contrastexpr": 21,
        "./exprs/depthtoocclusionexpr": 22,
        "./exprs/dofloop": 23,
        "./exprs/edgecolorexpr": 24,
        "./exprs/edgeexpr": 25,
        "./exprs/expr": 26,
        "./exprs/fragcolorexpr": 27,
        "./exprs/fragcoordexpr": 28,
        "./exprs/fxaaexpr": 29,
        "./exprs/getcompexpr": 31,
        "./exprs/godraysexpr": 32,
        "./exprs/grainexpr": 33,
        "./exprs/hsvtorgbexpr": 34,
        "./exprs/invertexpr": 35,
        "./exprs/lenexpr": 36,
        "./exprs/monochromeexpr": 37,
        "./exprs/motionblurloop": 38,
        "./exprs/mouseexpr": 39,
        "./exprs/normcenterfragcoordexpr": 40,
        "./exprs/normexpr": 41,
        "./exprs/normfragcoordexpr": 42,
        "./exprs/normmouseexpr": 43,
        "./exprs/opexpr": 44,
        "./exprs/perlinexpr": 45,
        "./exprs/powerblur": 46,
        "./exprs/randomexpr": 47,
        "./exprs/regiondecorator": 48,
        "./exprs/resolutionexpr": 49,
        "./exprs/rgbtohsvexpr": 50,
        "./exprs/rotateexpr": 51,
        "./exprs/scenesampleexpr": 52,
        "./exprs/simplexexpr": 54,
        "./exprs/sobelexpr": 55,
        "./exprs/ternaryexpr": 56,
        "./exprs/timeexpr": 57,
        "./exprs/translateexpr": 58,
        "./exprs/truedepthexpr": 59,
        "./exprs/vecexprs": 60,
        "./exprtypes": 61,
        "./glslfunctions": 62,
        "./mergepass": 64,
        "./settings": 65,
      },
    ],
    64: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.sendTexture = r.makeTexture = r.Merger = r.loop = r.EffectLoop = r.EffectDictionary = void 0);
        const n = e("./codebuilder"),
          o = e("./exprs/expr"),
          s = e("./exprs/fragcolorexpr"),
          i = e("./exprs/regiondecorator"),
          a = e("./exprs/scenesampleexpr"),
          c = e("./exprs/setcolorexpr"),
          u = e("./exprs/ternaryexpr"),
          l = e("./settings"),
          p = e("./webglprogramloop");
        function h(e) {
          return e.map((e) =>
            e instanceof o.ExprVec4 || e instanceof d
              ? e
              : new c.SetColorExpr(e)
          );
        }
        class f {
          constructor(e) {
            this.effectMap = (function (e) {
              const t = {};
              for (const r in e) {
                const n = e[r];
                t[r] = h(n);
              }
              return t;
            })(e);
          }
          toProgramMap(e, t, r, n) {
            const o = {};
            let s = {
              neighborSample: !1,
              centerSample: !1,
              sceneBuffer: !1,
              timeUniform: !1,
              mouseUniform: !1,
              passCount: !1,
              extraBuffers: new Set(),
            };
            for (const i in this.effectMap) {
              const a = this.effectMap[i],
                c = new d(a, { num: 1 });
              if (0 === c.effects.length)
                throw new Error("list of effects was empty");
              const u = c.genPrograms(e, t, r, n);
              let l = !1,
                h = u;
              for (; !l; )
                h.programElement instanceof p.WebGLProgramLeaf
                  ? ((h.last = !0), (l = !0))
                  : (h = h.programElement[h.programElement.length - 1]);
              (s = p.updateNeeds(s, u.getTotalNeeds())), (o[i] = u);
            }
            return { programMap: o, needs: s };
          }
        }
        r.EffectDictionary = f;
        class d {
          constructor(e, t) {
            (this.effects = h(e)), (this.loopInfo = t);
          }
          getSampleNum(e = 1, t = 0, r = this.effects.length) {
            e *= this.loopInfo.num;
            let n = 0;
            const o = this.effects.slice(t, r);
            for (const t of o) n += t.getSampleNum(e);
            return n;
          }
          regroup() {
            let e = 0,
              t = 0,
              r = [];
            const n = [];
            let o,
              s,
              i = 0;
            const a = () => {
              i--,
                r.length > 0 &&
                  (1 === r.length ? n.push(r[0]) : n.push(new d(r, { num: 1 })),
                  (e -= t),
                  (r = []));
            };
            for (const n of this.effects) {
              const c = n.getSampleNum();
              (t = e),
                (e += c),
                n instanceof d
                  ? ((s = n.loopInfo.target), n.hasTargetSwitch() && (i = 2))
                  : (s = this.loopInfo.target),
                (e > 0 || s !== o || i > 0) && a(),
                r.push(n),
                (o = s);
            }
            return a(), n;
          }
          genPrograms(e, t, r, o) {
            const s = this.getSampleNum() / this.loopInfo.num,
              i = this.getSampleNum(void 0, 0, 1) / this.loopInfo.num,
              a = this.getSampleNum(void 0, 1) / this.loopInfo.num;
            if (!this.hasTargetSwitch() && (0 === s || (1 === i && 0 === a))) {
              return new n.CodeBuilder(this).compileProgram(e, t, r, o);
            }
            return (
              (this.effects = this.regroup()),
              new p.WebGLProgramLoop(
                this.effects.map((n) => n.genPrograms(e, t, r, o)),
                this.loopInfo,
                e
              )
            );
          }
          target(e) {
            return (this.loopInfo.target = e), this;
          }
          hasTargetSwitch() {
            for (const e of this.effects)
              if (
                e instanceof d &&
                (e.loopInfo.target !== this.loopInfo.target ||
                  e.hasTargetSwitch())
              )
                return !0;
            return !1;
          }
          regionWrap(e, t, r = !0, n) {
            return (
              (this.effects = this.effects.map((o, a) =>
                o instanceof d
                  ? o.regionWrap(e, t, a === this.effects.length - 1, n)
                  : new c.SetColorExpr(
                      i.region(
                        e,
                        o.brandExprWithRegion(e),
                        a === this.effects.length - 1 && r
                          ? t instanceof s.FragColorExpr
                            ? t
                            : u.ternary(null, t, s.fcolor())
                          : s.fcolor(),
                        n
                      )
                    )
              )),
              this
            );
          }
        }
        function m(e, t = 1) {
          return new d(e, { num: t });
        }
        (r.EffectLoop = d), (r.loop = m);
        function x(e, t) {
          const r = e.createTexture();
          if (null === r) throw new Error("problem creating texture");
          e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL, !0),
            e.bindTexture(e.TEXTURE_2D, r),
            e.texImage2D(
              e.TEXTURE_2D,
              0,
              e.RGBA,
              e.drawingBufferWidth,
              e.drawingBufferHeight,
              0,
              e.RGBA,
              e.UNSIGNED_BYTE,
              null
            );
          const n = (t) =>
            void 0 === t || "linear" === t ? e.LINEAR : e.NEAREST;
          return (
            e.texParameteri(
              e.TEXTURE_2D,
              e.TEXTURE_MIN_FILTER,
              n(null == t ? void 0 : t.minFilterMode)
            ),
            e.texParameteri(
              e.TEXTURE_2D,
              e.TEXTURE_MAG_FILTER,
              n(null == t ? void 0 : t.maxFilterMode)
            ),
            "wrap" !== (null == t ? void 0 : t.edgeMode) &&
              (e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE),
              e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE)),
            r
          );
        }
        function g(e, t) {
          t instanceof WebGLTexture ||
            null === t ||
            e.texImage2D(e.TEXTURE_2D, 0, e.RGBA, e.RGBA, e.UNSIGNED_BYTE, t);
        }
        (r.Merger = class {
          constructor(e, t, r, n) {
            if (
              ((this.uniformLocs = {}),
              (this.channels = []),
              (this.fShaders = []),
              (this.textureMode = t instanceof WebGLTexture),
              void 0 !== (null == n ? void 0 : n.channels) &&
                (this.channels = null == n ? void 0 : n.channels),
              e instanceof f || (e = new f({ default: e })),
              this.textureMode)
            ) {
              l.settings.verbosity > 1 &&
                console.log("we are in texture mode!");
              for (const t in e.effectMap) {
                e.effectMap[t].unshift(m([a.input()]).target(-1));
              }
            }
            (this.source = t),
              (this.gl = r),
              (this.options = n),
              this.gl.viewport(
                0,
                0,
                this.gl.drawingBufferWidth,
                this.gl.drawingBufferHeight
              );
            const o = this.gl.createBuffer();
            if (null === o) throw new Error("problem creating vertex buffer");
            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, o);
            const s = new Float32Array([
              -1,
              -1,
              1,
              -1,
              -1,
              1,
              -1,
              1,
              1,
              -1,
              1,
              1,
            ]);
            this.gl.bufferData(this.gl.ARRAY_BUFFER, s, this.gl.STATIC_DRAW),
              (this.vertexBuffer = o);
            const i = this.gl.createShader(this.gl.VERTEX_SHADER);
            if (null === i)
              throw new Error("problem creating the vertex shader");
            (this.vShader = i),
              this.gl.shaderSource(
                i,
                "attribute vec2 aPosition;\nvoid main() {\n  gl_Position = vec4(aPosition, 0.0, 1.0);\n}\n"
              ),
              this.gl.compileShader(i),
              (this.tex = {
                back: {
                  name: "orig_back",
                  tex: t instanceof WebGLTexture ? t : x(this.gl, this.options),
                },
                front: { name: "orig_front", tex: x(this.gl, this.options) },
                scene: void 0,
                bufTextures: [],
              });
            const c = r.createFramebuffer();
            if (null === c) throw new Error("problem creating the framebuffer");
            this.framebuffer = c;
            const { programMap: u, needs: p } = e.toProgramMap(
              this.gl,
              this.vShader,
              this.uniformLocs,
              this.fShaders
            );
            if (
              ((this.programMap = u),
              (p.sceneBuffer || this.textureMode) &&
                (this.tex.scene = {
                  name: "scene",
                  tex: x(this.gl, this.options),
                }),
              void 0 === u.default)
            )
              throw new Error("no default program");
            this.programLoop = u.default;
            if (Math.max(...p.extraBuffers) + 1 > this.channels.length)
              throw new Error("not enough channels supplied for this effect");
            for (let e = 0; e < this.channels.length; e++) {
              const t = this.channels[e];
              if (t instanceof WebGLTexture)
                this.tex.bufTextures.push({ name: "img_channel_" + e, tex: t });
              else {
                const t = x(this.gl, this.options);
                this.tex.bufTextures.push({ name: "tex_channel_" + e, tex: t });
              }
            }
            l.settings.verbosity > 0 &&
              (console.log(e), console.log(this.programMap));
          }
          draw(e = 0, t = 0, r = 0) {
            this.gl.activeTexture(this.gl.TEXTURE0 + l.settings.offset),
              this.gl.bindTexture(this.gl.TEXTURE_2D, this.tex.back.tex),
              g(this.gl, this.source),
              this.gl.bindTexture(this.gl.TEXTURE_2D, null),
              this.programLoop.getTotalNeeds().sceneBuffer &&
                void 0 !== this.tex.scene &&
                (this.gl.activeTexture(this.gl.TEXTURE1 + l.settings.offset),
                this.gl.bindTexture(this.gl.TEXTURE_2D, this.tex.scene.tex),
                g(this.gl, this.source),
                this.gl.bindTexture(this.gl.TEXTURE_2D, null));
            let n = 0;
            for (const e of this.channels)
              this.gl.activeTexture(this.gl.TEXTURE2 + n + l.settings.offset),
                this.gl.bindTexture(
                  this.gl.TEXTURE_2D,
                  this.tex.bufTextures[n].tex
                ),
                g(this.gl, e),
                this.gl.bindTexture(this.gl.TEXTURE_2D, null),
                n++;
            this.programLoop.run(
              this.gl,
              this.tex,
              this.framebuffer,
              this.uniformLocs,
              this.programLoop.last,
              { timeVal: e, mouseX: t, mouseY: r }
            );
          }
          delete() {
            for (let e = 0; e < 2 + this.tex.bufTextures.length; e++)
              this.gl.activeTexture(this.gl.TEXTURE0 + e + l.settings.offset),
                this.gl.bindTexture(this.gl.TEXTURE_2D, null);
            this.gl.bindBuffer(this.gl.ARRAY_BUFFER, null),
              this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null),
              this.programLoop.delete(this.gl),
              this.gl.deleteTexture(this.tex.front.tex),
              this.gl.deleteTexture(this.tex.back.tex);
            for (const e of this.tex.bufTextures) this.gl.deleteTexture(e.tex);
            this.gl.deleteBuffer(this.vertexBuffer),
              this.gl.deleteFramebuffer(this.framebuffer),
              this.gl.deleteShader(this.vShader);
            for (const e of this.fShaders) this.gl.deleteShader(e);
          }
          changeProgram(e) {
            if (void 0 === this.programMap[e])
              throw new Error(`program "${e}" doesn't exist on this merger`);
            this.programLoop = this.programMap[e];
          }
        }),
          (r.makeTexture = x),
          (r.sendTexture = g);
      },
      {
        "./codebuilder": 12,
        "./exprs/expr": 26,
        "./exprs/fragcolorexpr": 27,
        "./exprs/regiondecorator": 48,
        "./exprs/scenesampleexpr": 52,
        "./exprs/setcolorexpr": 53,
        "./exprs/ternaryexpr": 56,
        "./settings": 65,
        "./webglprogramloop": 67,
      },
    ],
    65: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.settings = void 0),
          (r.settings = { verbosity: 0, offset: 0 });
      },
      {},
    ],
    66: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.brandWithRegion = r.brandWithChannel = r.captureAndAppend = void 0);
        const n = e("./glslfunctions");
        function o(e, t) {
          const r = e.sections[0],
            n = ")" === r[r.length - 1] ? ")" : "",
            o = r.substr(0, r.length - 1 - ~~(")" === n)) + t + "(" + n;
          return { origFuncName: r, newFuncName: o, ending: n };
        }
        (r.captureAndAppend = function (e, t, r) {
          const n = e.match(t);
          if (null === n) throw new Error("no match in the given string");
          return e.replace(t, n[0] + r);
        }),
          (r.brandWithChannel = function (e, t, r, n, s) {
            if (
              (void 0 === s || -1 === s
                ? (r.neighborSample = !0)
                : (r.extraBuffers = new Set([s])),
              void 0 === s || -1 === s)
            )
              return;
            const { origFuncName: i, newFuncName: a, ending: c } = o(
              e,
              void 0 !== s ? "_" + s : ""
            );
            (e.sections[0] = e.sections[0].split(i).join(a)),
              (t[n] = t[n]
                .split(i)
                .join(a)
                .split("uSampler")
                .join("uBufferSampler" + s));
          }),
          (r.brandWithRegion = function (e, t, r) {
            if (!Array.isArray(r)) return;
            const s = e.sourceLists,
              i = e.externalFuncs,
              a = e.needs;
            if (
              e.regionBranded ||
              (!a.neighborSample && 0 === a.extraBuffers.size)
            )
              return;
            const { origFuncName: c, newFuncName: u, ending: l } = o(
                s,
                "_region"
              ),
              p =
                u.substr(0, u.length - ~~(")" === l)) +
                "float r_x_min, float r_y_min, float r_x_max, float r_y_max" +
                (")" === l ? ")" : ", ");
            (i[t] = i[t]
              .split(c)
              .join(p)
              .split("texture2D(")
              .join("texture2D_region(r_x_min, r_y_min, r_x_max, r_y_max, ")),
              s.sections.shift(),
              ")" === l && s.sections.unshift(")");
            for (let e = 0; e < 4 - ~~(")" === l); e++)
              s.sections.unshift(", ");
            s.sections.unshift(u.substr(0, u.length - ~~(")" === l))),
              s.values.unshift(...r),
              i.unshift(n.glslFuncs.texture2D_region),
              (e.regionBranded = !0);
          });
      },
      { "./glslfunctions": 62 },
    ],
    67: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.WebGLProgramLoop = r.WebGLProgramLeaf = r.updateNeeds = void 0);
        const n = e("./settings");
        function o(e, t) {
          return {
            neighborSample: e.neighborSample || t.neighborSample,
            centerSample: e.centerSample || t.centerSample,
            sceneBuffer: e.sceneBuffer || t.sceneBuffer,
            timeUniform: e.timeUniform || t.timeUniform,
            mouseUniform: e.mouseUniform || t.mouseUniform,
            passCount: e.passCount || t.passCount,
            extraBuffers: new Set([...e.extraBuffers, ...t.extraBuffers]),
          };
        }
        r.updateNeeds = o;
        class s {
          constructor(e, t, r) {
            (this.program = e), (this.totalNeeds = t), (this.effects = r);
          }
        }
        function i(e, t, r) {
          t.useProgram(e.program);
          const n = t.getUniformLocation(e.program, r);
          if (null === n)
            throw new Error("could not get the " + r + " uniform location");
          return n;
        }
        r.WebGLProgramLeaf = s;
        r.WebGLProgramLoop = class {
          constructor(e, t, r) {
            if (
              ((this.last = !1),
              (this.counter = 0),
              (this.programElement = e),
              (this.loopInfo = t),
              this.programElement instanceof s)
            ) {
              if (void 0 === r)
                throw new Error(
                  "program element is a program but context is undefined"
                );
              this.programElement.totalNeeds.timeUniform &&
                (this.timeLoc = i(this.programElement, r, "uTime")),
                this.programElement.totalNeeds.mouseUniform &&
                  (this.mouseLoc = i(this.programElement, r, "uMouse")),
                this.programElement.totalNeeds.passCount &&
                  (this.countLoc = i(this.programElement, r, "uCount"));
            }
          }
          getTotalNeeds() {
            if (!(this.programElement instanceof s)) {
              const e = [];
              for (const t of this.programElement) e.push(t.getTotalNeeds());
              return e.reduce(o);
            }
            return this.programElement.totalNeeds;
          }
          run(e, t, r, o, i, a, c) {
            let u;
            if (
              void 0 !== this.loopInfo.target &&
              (null == c ? void 0 : c.loopInfo.target) !== this.loopInfo.target
            ) {
              if (((u = t.back), -1 !== this.loopInfo.target))
                t.back = t.bufTextures[this.loopInfo.target];
              else {
                if (void 0 === t.scene)
                  throw new Error(
                    "tried to target -1 but scene texture was undefined"
                  );
                t.back = t.scene;
              }
              (t.bufTextures[this.loopInfo.target] = u),
                n.settings.verbosity > 99 &&
                  console.log("saved texture: " + u.name);
            }
            if (this.programElement instanceof s) {
              if (this.programElement.totalNeeds.sceneBuffer) {
                if (void 0 === t.scene)
                  throw new Error(
                    "needs scene buffer, but scene texture is somehow undefined"
                  );
                e.activeTexture(e.TEXTURE1 + n.settings.offset),
                  -1 === this.loopInfo.target
                    ? e.bindTexture(e.TEXTURE_2D, u.tex)
                    : e.bindTexture(e.TEXTURE_2D, t.scene.tex);
              }
              for (const r of this.programElement.totalNeeds.extraBuffers)
                e.activeTexture(e.TEXTURE2 + r + n.settings.offset),
                  e.bindTexture(e.TEXTURE_2D, t.bufTextures[r].tex);
              e.useProgram(this.programElement.program);
              for (const t of this.programElement.effects)
                t.applyUniforms(e, o);
              if (this.programElement.totalNeeds.timeUniform) {
                if (void 0 === this.timeLoc || void 0 === a.timeVal)
                  throw new Error("time or location is undefined");
                e.uniform1f(this.timeLoc, a.timeVal);
              }
              if (this.programElement.totalNeeds.mouseUniform) {
                if (
                  void 0 === this.mouseLoc ||
                  void 0 === a.mouseX ||
                  void 0 === a.mouseY
                )
                  throw new Error("mouse uniform or location is undefined");
                e.uniform2f(this.mouseLoc, a.mouseX, a.mouseY);
              }
              if (this.programElement.totalNeeds.passCount && void 0 !== c) {
                if (void 0 === this.countLoc)
                  throw new Error("count location is undefined");
                void 0 !== c && e.uniform1i(this.countLoc, c.counter),
                  this.counter++;
                const t = void 0 === c ? 1 : c.loopInfo.num;
                this.counter %= t;
              }
            }
            for (let c = 0; c < this.loopInfo.num; c++) {
              const u = c === this.loopInfo.num - 1;
              if (this.programElement instanceof s) {
                u && i && this.last
                  ? e.bindFramebuffer(e.FRAMEBUFFER, null)
                  : (e.bindFramebuffer(e.FRAMEBUFFER, r),
                    e.framebufferTexture2D(
                      e.FRAMEBUFFER,
                      e.COLOR_ATTACHMENT0,
                      e.TEXTURE_2D,
                      t.front.tex,
                      0
                    )),
                  e.activeTexture(e.TEXTURE0 + n.settings.offset),
                  e.bindTexture(e.TEXTURE_2D, t.back.tex),
                  e.drawArrays(e.TRIANGLES, 0, 6),
                  n.settings.verbosity > 99 &&
                    (console.log("intermediate back", t.back.name),
                    console.log("intermediate front", t.front.name)),
                  ([t.back, t.front] = [t.front, t.back]);
                for (const t of this.programElement.totalNeeds.extraBuffers)
                  e.activeTexture(e.TEXTURE2 + t + n.settings.offset),
                    e.bindTexture(e.TEXTURE_2D, null);
                e.activeTexture(e.TEXTURE1 + n.settings.offset),
                  e.bindTexture(e.TEXTURE_2D, null);
              } else {
                void 0 !== this.loopInfo.func && this.loopInfo.func(c);
                for (const n of this.programElement)
                  n.run(e, t, r, o, u, a, this);
              }
            }
            if (void 0 !== u) {
              const e = this.loopInfo.target;
              if (
                (n.settings.verbosity > 99 &&
                  (console.log("pre final back", t.back.name),
                  console.log("pre final front", t.front.name)),
                -1 !== this.loopInfo.target)
              )
                t.bufTextures[e] = t.back;
              else {
                if (void 0 === t.scene)
                  throw new Error(
                    "tried to replace -1 but scene texture was undefined"
                  );
                t.scene = t.back;
              }
              (t.back = u),
                n.settings.verbosity > 99 &&
                  (console.log("post final back", t.back.name),
                  console.log("post final front", t.front.name),
                  console.log("channel texture", t.bufTextures[e].name));
            }
          }
          delete(e) {
            if (this.programElement instanceof s)
              e.deleteProgram(this.programElement.program);
            else for (const t of this.programElement) t.delete(e);
          }
        };
      },
      { "./settings": 65 },
    ],
    68: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.blurandtrace = r.BlurAndTrace = void 0);
        const n = e("@bandaloo/merge-pass");
        class o extends n.EffectLoop {
          constructor(e, t, r, o, s, i) {
            const a = n.float(e),
              c = n.float(t);
            super(
              [
                ...(i ? [] : [n.loop([n.channel(s)]).target(s)]),
                n.blur2d(c, c, r, o),
                n.edge(a, s),
              ],
              { num: 1 }
            ),
              (this.brightnessFloat = a),
              (this.blurSizeFloat = c),
              (this.brightness = e),
              (this.blurSize = t);
          }
          setBrightness(e) {
            this.brightnessFloat.setVal(n.wrapInValue(e)),
              (this.brightness = n.wrapInValue(e));
          }
          setBlurSize(e) {
            this.blurSizeFloat.setVal(n.wrapInValue(e)),
              (this.blurSize = n.wrapInValue(e));
          }
        }
        (r.BlurAndTrace = o),
          (r.blurandtrace = function (
            e = n.mut(1),
            t = n.mut(1),
            r = 4,
            s = 9,
            i = 0,
            a = !1
          ) {
            return new o(n.wrapInValue(e), n.wrapInValue(t), r, s, i, a);
          });
      },
      { "@bandaloo/merge-pass": 63 },
    ],
    69: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.celshade = r.CelShade = void 0);
        const n = e("@bandaloo/merge-pass");
        class o extends n.WrappedExpr {
          constructor(e, t, r, o) {
            const s = n.float(e),
              i = n.float(t),
              a = n.float(r),
              c = n.float(o),
              u = n.cfloat(
                n.tag`(smoothstep(-${c} + ${a}, ${c} + ${a}, ${n.rgb2hsv(
                  n.fcolor()
                )}.z) * ${s} + ${i})`
              );
            super(n.hsv2rgb(n.changecomp(n.rgb2hsv(n.fcolor()), u, "z"))),
              (this.multFloat = s),
              (this.bumpFloat = i),
              (this.centerFloat = a),
              (this.edgeFloat = c),
              (this.mult = e),
              (this.bump = t),
              (this.center = r),
              (this.edge = o);
          }
          setMult(e) {
            this.multFloat.setVal(n.wrapInValue(e)),
              (this.mult = n.wrapInValue(e));
          }
          setBump(e) {
            this.bumpFloat.setVal(n.wrapInValue(e)),
              (this.bump = n.wrapInValue(e));
          }
          setCenter(e) {
            this.centerFloat.setVal(n.wrapInValue(e)),
              (this.center = n.wrapInValue(e));
          }
          setEdge(e) {
            this.edgeFloat.setVal(n.wrapInValue(e)),
              (this.edge = n.wrapInValue(e));
          }
        }
        (r.CelShade = o),
          (r.celshade = function (
            e = n.mut(0.8),
            t = n.mut(0.3),
            r = n.mut(0.3),
            s = n.mut(0.03)
          ) {
            return new o(
              n.wrapInValue(e),
              n.wrapInValue(t),
              n.wrapInValue(r),
              n.wrapInValue(s)
            );
          });
      },
      { "@bandaloo/merge-pass": 63 },
    ],
    70: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.foggyrays = r.FoggyRaysExpr = void 0);
        const n = e("@bandaloo/merge-pass");
        class o extends n.WrappedExpr {
          constructor(e, t, r, o, s, i) {
            const a = n.float(e),
              c = n.float(t),
              u = n.float(r),
              l = n.op(
                n.op(
                  n.simplex(
                    n.op(
                      n.op(n.pos(), "+", n.op(n.op(n.time(), "*", c), "/", a)),
                      "*",
                      n.op(n.resolution(), "/", n.op(a, "*", 2))
                    )
                  ),
                  "*",
                  n.simplex(
                    n.op(
                      n.op(
                        n.pos(),
                        "+",
                        n.op(n.op(n.time(), "*", c), "/", n.op(a, "*", -2))
                      ),
                      "*",
                      n.op(n.resolution(), "/", n.op(a, "*", 4))
                    )
                  )
                ),
                "*",
                0.5
              ),
              p = n.godrays({
                weight: 0.009,
                density: n.op(u, "+", n.op(l, "*", 0.5)),
                convertDepth:
                  void 0 !== i ? { threshold: 0.01, newColor: i } : void 0,
                samplerNum: s,
                numSamples: o,
              });
            super(p),
              (this.periodFloat = a),
              (this.speedFloat = c),
              (this.throwDistanceFloat = u),
              (this.godraysExpr = p),
              (this.convertsDepth = void 0 !== i),
              (this.period = e),
              (this.speed = t),
              (this.throwDistance = r);
          }
          setPeriod(e) {
            this.periodFloat.setVal(n.wrapInValue(e)),
              (this.period = n.wrapInValue(e));
          }
          setSpeed(e) {
            this.speedFloat.setVal(n.wrapInValue(e)),
              (this.speed = n.wrapInValue(e));
          }
          setThrowDistance(e) {
            this.throwDistanceFloat.setVal(n.wrapInValue(e)),
              (this.throwDistance = n.wrapInValue(e));
          }
          setNewColor(e) {
            if (void 0 === this.convertsDepth)
              throw new Error(
                "can only set new color if you are converting from a depth buffer"
              );
            this.godraysExpr.setNewColor(e);
          }
        }
        (r.FoggyRaysExpr = o),
          (r.foggyrays = function (
            e = n.mut(100),
            t = n.mut(1),
            r = n.mut(0.3),
            s = 100,
            i,
            a
          ) {
            return new o(
              n.wrapInValue(e),
              n.wrapInValue(t),
              n.wrapInValue(r),
              s,
              i,
              a
            );
          });
      },
      { "@bandaloo/merge-pass": 63 },
    ],
    71: [
      function (e, t, r) {
        "use strict";
        var n =
            (this && this.__createBinding) ||
            (Object.create
              ? function (e, t, r, n) {
                  void 0 === n && (n = r),
                    Object.defineProperty(e, n, {
                      enumerable: !0,
                      get: function () {
                        return t[r];
                      },
                    });
                }
              : function (e, t, r, n) {
                  void 0 === n && (n = r), (e[n] = t[r]);
                }),
          o =
            (this && this.__exportStar) ||
            function (e, t) {
              for (var r in e)
                "default" === r || t.hasOwnProperty(r) || n(t, e, r);
            };
        Object.defineProperty(r, "__esModule", { value: !0 }),
          o(e("./foggyrays"), r),
          o(e("./vignette"), r),
          o(e("./blurandtrace"), r),
          o(e("./lightbands"), r),
          o(e("./noisedisplacement"), r),
          o(e("./oldfilm"), r),
          o(e("./kaleidoscope"), r),
          o(e("./celshade"), r);
      },
      {
        "./blurandtrace": 68,
        "./celshade": 69,
        "./foggyrays": 70,
        "./kaleidoscope": 72,
        "./lightbands": 73,
        "./noisedisplacement": 74,
        "./oldfilm": 75,
        "./vignette": 76,
      },
    ],
    72: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.kaleidoscope = r.Kaleidoscope = void 0);
        const n = e("@bandaloo/merge-pass");
        class o extends n.WrappedExpr {
          constructor(e, t) {
            const r = n.float(e),
              o = n.float(t),
              s = n.op(n.translate(n.pos(), n.vec2(-0.5, -0.5)), "/", o),
              i = n.a2("atan", n.getcomp(s, "y"), n.getcomp(s, "x")),
              a = n.op(2 * Math.PI, "*", n.op(1, "/", r)),
              c = n.op(n.a1("floor", n.op(i, "/", a)), "*", a),
              u = n.op(i, "-", c),
              l = n.op(a, "-", n.op(2, "*", u)),
              p = n.a1(
                "floor",
                n.op(n.a2("mod", n.op(c, "+", 0.1), n.op(a, "*", 2)), "/", a)
              ),
              h = n.translate(
                n.rotate(s, n.op(c, "-", n.op(l, "*", p))),
                n.vec2(0.5, 0.5)
              );
            super(n.channel(-1, h)),
              (this.sidesFloat = r),
              (this.scaleFloat = o),
              (this.sides = e),
              (this.scale = t);
          }
          setSides(e) {
            this.sidesFloat.setVal(n.wrapInValue(e)),
              (this.sides = n.wrapInValue(e));
          }
          setScale(e) {
            this.scaleFloat.setVal(n.wrapInValue(e)),
              (this.scale = n.wrapInValue(e));
          }
        }
        (r.Kaleidoscope = o),
          (r.kaleidoscope = function (e = n.mut(8), t = n.mut(1)) {
            return new o(n.wrapInValue(e), n.wrapInValue(t));
          });
      },
      { "@bandaloo/merge-pass": 63 },
    ],
    73: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.lightbands = r.LightBands = void 0);
        const n = e("@bandaloo/merge-pass");
        class o extends n.WrappedExpr {
          constructor(e, t, r, o) {
            const s = n.float(e),
              i = n.float(t),
              a = n.float(r);
            super(
              n.brightness(
                n.ternary(
                  n.op(n.getcomp(n.channel(0), "r"), "-", a),
                  n.op(
                    n.a1(
                      "sin",
                      n.op(
                        n.op(n.time(), "*", s),
                        "+",
                        n.truedepth(n.getcomp(n.channel(o), "r"))
                      )
                    ),
                    "*",
                    i
                  ),
                  0
                )
              )
            ),
              (this.speedFloat = s),
              (this.intensityFloat = i),
              (this.thresholdFloat = a),
              (this.speed = e),
              (this.intensity = t),
              (this.threshold = r);
          }
          setSpeed(e) {
            this.speedFloat.setVal(n.wrapInValue(e)),
              (this.speed = n.wrapInValue(e));
          }
          setIntensity(e) {
            this.intensityFloat.setVal(n.wrapInValue(e)),
              (this.intensity = n.wrapInValue(e));
          }
          setThreshold(e) {
            this.thresholdFloat.setVal(n.wrapInValue(e)),
              (this.threshold = n.wrapInValue(e));
          }
        }
        (r.LightBands = o),
          (r.lightbands = function (
            e = n.mut(4),
            t = n.mut(0.3),
            r = n.mut(0.01),
            s = 0
          ) {
            return new o(
              n.wrapInValue(e),
              n.wrapInValue(t),
              n.wrapInValue(r),
              s
            );
          });
      },
      { "@bandaloo/merge-pass": 63 },
    ],
    74: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.noisedisplacement = r.NoiseDisplacement = void 0);
        const n = e("@bandaloo/merge-pass");
        class o extends n.WrappedExpr {
          constructor(e, t, r) {
            const o = n.float(e),
              s = n.float(t),
              i = n.float(r),
              a = (e) =>
                n.simplex(
                  n.op(
                    n.op(
                      n.changecomp(
                        n.op(n.pos(), "/", o),
                        n.op(n.time(), "*", s),
                        e,
                        "+"
                      ),
                      "*",
                      n.op(n.resolution(), "/", n.getcomp(n.resolution(), "y"))
                    ),
                    "+",
                    "x" === e ? 1234 : 5678
                  )
                );
            super(
              n.channel(
                -1,
                n.op(
                  n.op(
                    n.op(n.vec2(a("x"), a("y")), "*", i),
                    "*",
                    n.op(
                      n.get2comp(n.resolution(), "yx"),
                      "/",
                      n.getcomp(n.resolution(), "y")
                    )
                  ),
                  "+",
                  n.pos()
                )
              )
            ),
              (this.periodFloat = o),
              (this.speedFloat = s),
              (this.intensityFloat = i),
              (this.period = e),
              (this.speed = t),
              (this.intensity = r);
          }
          setPeriod(e) {
            this.periodFloat.setVal(n.wrapInValue(e)),
              (this.period = n.wrapInValue(e));
          }
          setSpeed(e) {
            this.speedFloat.setVal(n.wrapInValue(e)),
              (this.speed = n.wrapInValue(e));
          }
          setIntensity(e) {
            this.intensityFloat.setVal(n.wrapInValue(e)),
              (this.speed = n.wrapInValue(e));
          }
        }
        (r.NoiseDisplacement = o),
          (r.noisedisplacement = function (
            e = n.mut(0.1),
            t = n.mut(1),
            r = n.mut(0.005)
          ) {
            return new o(n.wrapInValue(e), n.wrapInValue(t), n.wrapInValue(r));
          });
      },
      { "@bandaloo/merge-pass": 63 },
    ],
    75: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.oldfilm = r.OldFilm = void 0);
        const n = e("@bandaloo/merge-pass");
        class o extends n.WrappedExpr {
          constructor(e, t, r) {
            const o = n.float(e),
              s = n.float(t),
              i = n.float(r),
              a = n.a1("floor", n.op(n.time(), "*", 24)),
              c = n.op(
                n.random(
                  n.op(n.pixel(), "+", n.a2("mod", n.op(a, "*", 99), 3e3))
                ),
                "*",
                i
              ),
              u = n.op(
                n.op(
                  n.op(
                    n.a1(
                      "abs",
                      n.op(
                        n.op(
                          2,
                          "*",
                          n.a1("fract", n.op(10, "*", n.getcomp(n.pos(), "x")))
                        ),
                        "-",
                        1
                      )
                    ),
                    "-",
                    0.5
                  ),
                  "*",
                  2
                ),
                "*",
                s
              ),
              l = n.a2(
                "step",
                n.op(1, "-", n.op(1, "/", 120)),
                n.a2(
                  "mod",
                  n.op(
                    n.getcomp(n.pos(), "x"),
                    "+",
                    n.random(n.op(n.vec2(50, 50), "*", n.time()))
                  ),
                  1
                )
              ),
              p = n.op(u, "*", l),
              h = n.a2(
                "mod",
                n.op(
                  n.op(
                    n.pos(),
                    "*",
                    n.op(n.resolution(), "/", n.getcomp(n.resolution(), "y"))
                  ),
                  "+",
                  a
                ),
                n.vec2(100, 100)
              ),
              f = n.op(n.op(n.simplex(n.op(h, "*", 7)), "*", 0.44), "+", 0.5),
              d = n.op(n.a2("step", f, 0.08), "*", o);
            super(
              n.monochrome(n.brightness(d, n.brightness(p, n.brightness(c))))
            ),
              (this.speckIntensityFloat = o),
              (this.lineIntensityFloat = s),
              (this.grainIntensityFloat = i),
              (this.speckIntensity = e),
              (this.lineIntensity = t),
              (this.grainIntensity = r);
          }
          setSpeckIntensity(e) {
            this.speckIntensityFloat.setVal(n.wrapInValue(e)),
              (this.speckIntensity = n.wrapInValue(e));
          }
          setLineIntensity(e) {
            this.lineIntensityFloat.setVal(n.wrapInValue(e)),
              (this.lineIntensity = n.wrapInValue(e));
          }
          setGrainIntensity(e) {
            this.grainIntensityFloat.setVal(n.wrapInValue(e)),
              (this.grainIntensity = n.wrapInValue(e));
          }
        }
        (r.OldFilm = o),
          (r.oldfilm = function (
            e = n.mut(0.4),
            t = n.mut(0.12),
            r = n.mut(0.11)
          ) {
            return new o(n.wrapInValue(e), n.wrapInValue(t), n.wrapInValue(r));
          });
      },
      { "@bandaloo/merge-pass": 63 },
    ],
    76: [
      function (e, t, r) {
        "use strict";
        Object.defineProperty(r, "__esModule", { value: !0 }),
          (r.vignette = r.Vignette = void 0);
        const n = e("@bandaloo/merge-pass");
        class o extends n.EffectLoop {
          constructor(e, t, r) {
            const o = n.float(e),
              s = n.float(t),
              i = n.float(r),
              a = n.op(n.len(n.center()), "*", o),
              c = n.blur2d(a, a),
              u = n.a2("pow", n.len(n.center()), i);
            super([c, n.brightness(n.op(u, "*", n.op(s, "*", -1)))], {
              num: 1,
            }),
              (this.blurScalarFloat = o),
              (this.brightnessScalarFloat = s),
              (this.brightnessExponentFloat = i),
              (this.blurScalar = e),
              (this.brightnessScalar = t),
              (this.brightnessExponent = r);
          }
          setBlurScalar(e) {
            this.blurScalarFloat.setVal(n.wrapInValue(e)),
              (this.blurScalar = n.wrapInValue(e));
          }
          setBrightnessScalar(e) {
            this.brightnessScalarFloat.setVal(n.wrapInValue(e)),
              (this.brightnessScalar = n.wrapInValue(e));
          }
          setBrightnessExponent(e) {
            this.brightnessExponentFloat.setVal(n.wrapInValue(e)),
              (this.brightnessExponent = n.wrapInValue(e));
          }
        }
        (r.Vignette = o),
          (r.vignette = function (
            e = n.mut(3),
            t = n.mut(1.8),
            r = n.mut(1.8)
          ) {
            return new o(n.wrapInValue(e), n.wrapInValue(t), n.wrapInValue(r));
          });
      },
      { "@bandaloo/merge-pass": 63 },
    ],
    77: [
      function (e, t, r) {
        var n = e("./lib/alea"),
          o = e("./lib/xor128"),
          s = e("./lib/xorwow"),
          i = e("./lib/xorshift7"),
          a = e("./lib/xor4096"),
          c = e("./lib/tychei"),
          u = e("./seedrandom");
        (u.alea = n),
          (u.xor128 = o),
          (u.xorwow = s),
          (u.xorshift7 = i),
          (u.xor4096 = a),
          (u.tychei = c),
          (t.exports = u);
      },
      {
        "./lib/alea": 78,
        "./lib/tychei": 79,
        "./lib/xor128": 80,
        "./lib/xor4096": 81,
        "./lib/xorshift7": 82,
        "./lib/xorwow": 83,
        "./seedrandom": 84,
      },
    ],
    78: [
      function (e, t, r) {
        !(function (e, t, r) {
          function n(e) {
            var t,
              r = this,
              n =
                ((t = 4022871197),
                function (e) {
                  e = String(e);
                  for (var r = 0; r < e.length; r++) {
                    var n = 0.02519603282416938 * (t += e.charCodeAt(r));
                    (n -= t = n >>> 0),
                      (t = (n *= t) >>> 0),
                      (t += 4294967296 * (n -= t));
                  }
                  return 2.3283064365386963e-10 * (t >>> 0);
                });
            (r.next = function () {
              var e = 2091639 * r.s0 + 2.3283064365386963e-10 * r.c;
              return (r.s0 = r.s1), (r.s1 = r.s2), (r.s2 = e - (r.c = 0 | e));
            }),
              (r.c = 1),
              (r.s0 = n(" ")),
              (r.s1 = n(" ")),
              (r.s2 = n(" ")),
              (r.s0 -= n(e)),
              r.s0 < 0 && (r.s0 += 1),
              (r.s1 -= n(e)),
              r.s1 < 0 && (r.s1 += 1),
              (r.s2 -= n(e)),
              r.s2 < 0 && (r.s2 += 1),
              (n = null);
          }
          function o(e, t) {
            return (t.c = e.c), (t.s0 = e.s0), (t.s1 = e.s1), (t.s2 = e.s2), t;
          }
          function s(e, t) {
            var r = new n(e),
              s = t && t.state,
              i = r.next;
            return (
              (i.int32 = function () {
                return (4294967296 * r.next()) | 0;
              }),
              (i.double = function () {
                return i() + 11102230246251565e-32 * ((2097152 * i()) | 0);
              }),
              (i.quick = i),
              s &&
                ("object" == typeof s && o(s, r),
                (i.state = function () {
                  return o(r, {});
                })),
              i
            );
          }
          t && t.exports
            ? (t.exports = s)
            : r && r.amd
            ? r(function () {
                return s;
              })
            : (this.alea = s);
        })(0, "object" == typeof t && t, "function" == typeof define && define);
      },
      {},
    ],
    79: [
      function (e, t, r) {
        !(function (e, t, r) {
          function n(e) {
            var t = this,
              r = "";
            (t.next = function () {
              var e = t.b,
                r = t.c,
                n = t.d,
                o = t.a;
              return (
                (e = (e << 25) ^ (e >>> 7) ^ r),
                (r = (r - n) | 0),
                (n = (n << 24) ^ (n >>> 8) ^ o),
                (o = (o - e) | 0),
                (t.b = e = (e << 20) ^ (e >>> 12) ^ r),
                (t.c = r = (r - n) | 0),
                (t.d = (n << 16) ^ (r >>> 16) ^ o),
                (t.a = (o - e) | 0)
              );
            }),
              (t.a = 0),
              (t.b = 0),
              (t.c = -1640531527),
              (t.d = 1367130551),
              e === Math.floor(e)
                ? ((t.a = (e / 4294967296) | 0), (t.b = 0 | e))
                : (r += e);
            for (var n = 0; n < r.length + 20; n++)
              (t.b ^= 0 | r.charCodeAt(n)), t.next();
          }
          function o(e, t) {
            return (t.a = e.a), (t.b = e.b), (t.c = e.c), (t.d = e.d), t;
          }
          function s(e, t) {
            var r = new n(e),
              s = t && t.state,
              i = function () {
                return (r.next() >>> 0) / 4294967296;
              };
            return (
              (i.double = function () {
                do {
                  var e =
                    ((r.next() >>> 11) + (r.next() >>> 0) / 4294967296) /
                    (1 << 21);
                } while (0 === e);
                return e;
              }),
              (i.int32 = r.next),
              (i.quick = i),
              s &&
                ("object" == typeof s && o(s, r),
                (i.state = function () {
                  return o(r, {});
                })),
              i
            );
          }
          t && t.exports
            ? (t.exports = s)
            : r && r.amd
            ? r(function () {
                return s;
              })
            : (this.tychei = s);
        })(0, "object" == typeof t && t, "function" == typeof define && define);
      },
      {},
    ],
    80: [
      function (e, t, r) {
        !(function (e, t, r) {
          function n(e) {
            var t = this,
              r = "";
            (t.x = 0),
              (t.y = 0),
              (t.z = 0),
              (t.w = 0),
              (t.next = function () {
                var e = t.x ^ (t.x << 11);
                return (
                  (t.x = t.y),
                  (t.y = t.z),
                  (t.z = t.w),
                  (t.w ^= (t.w >>> 19) ^ e ^ (e >>> 8))
                );
              }),
              e === (0 | e) ? (t.x = e) : (r += e);
            for (var n = 0; n < r.length + 64; n++)
              (t.x ^= 0 | r.charCodeAt(n)), t.next();
          }
          function o(e, t) {
            return (t.x = e.x), (t.y = e.y), (t.z = e.z), (t.w = e.w), t;
          }
          function s(e, t) {
            var r = new n(e),
              s = t && t.state,
              i = function () {
                return (r.next() >>> 0) / 4294967296;
              };
            return (
              (i.double = function () {
                do {
                  var e =
                    ((r.next() >>> 11) + (r.next() >>> 0) / 4294967296) /
                    (1 << 21);
                } while (0 === e);
                return e;
              }),
              (i.int32 = r.next),
              (i.quick = i),
              s &&
                ("object" == typeof s && o(s, r),
                (i.state = function () {
                  return o(r, {});
                })),
              i
            );
          }
          t && t.exports
            ? (t.exports = s)
            : r && r.amd
            ? r(function () {
                return s;
              })
            : (this.xor128 = s);
        })(0, "object" == typeof t && t, "function" == typeof define && define);
      },
      {},
    ],
    81: [
      function (e, t, r) {
        !(function (e, t, r) {
          function n(e) {
            var t = this;
            (t.next = function () {
              var e,
                r,
                n = t.w,
                o = t.X,
                s = t.i;
              return (
                (t.w = n = (n + 1640531527) | 0),
                (r = o[(s + 34) & 127]),
                (e = o[(s = (s + 1) & 127)]),
                (r ^= r << 13),
                (e ^= e << 17),
                (r ^= r >>> 15),
                (e ^= e >>> 12),
                (r = o[s] = r ^ e),
                (t.i = s),
                (r + (n ^ (n >>> 16))) | 0
              );
            }),
              (function (e, t) {
                var r,
                  n,
                  o,
                  s,
                  i,
                  a = [],
                  c = 128;
                for (
                  t === (0 | t)
                    ? ((n = t), (t = null))
                    : ((t += "\0"), (n = 0), (c = Math.max(c, t.length))),
                    o = 0,
                    s = -32;
                  s < c;
                  ++s
                )
                  t && (n ^= t.charCodeAt((s + 32) % t.length)),
                    0 === s && (i = n),
                    (n ^= n << 10),
                    (n ^= n >>> 15),
                    (n ^= n << 4),
                    (n ^= n >>> 13),
                    s >= 0 &&
                      ((i = (i + 1640531527) | 0),
                      (o = 0 == (r = a[127 & s] ^= n + i) ? o + 1 : 0));
                for (
                  o >= 128 && (a[127 & ((t && t.length) || 0)] = -1),
                    o = 127,
                    s = 512;
                  s > 0;
                  --s
                )
                  (n = a[(o + 34) & 127]),
                    (r = a[(o = (o + 1) & 127)]),
                    (n ^= n << 13),
                    (r ^= r << 17),
                    (n ^= n >>> 15),
                    (r ^= r >>> 12),
                    (a[o] = n ^ r);
                (e.w = i), (e.X = a), (e.i = o);
              })(t, e);
          }
          function o(e, t) {
            return (t.i = e.i), (t.w = e.w), (t.X = e.X.slice()), t;
          }
          function s(e, t) {
            null == e && (e = +new Date());
            var r = new n(e),
              s = t && t.state,
              i = function () {
                return (r.next() >>> 0) / 4294967296;
              };
            return (
              (i.double = function () {
                do {
                  var e =
                    ((r.next() >>> 11) + (r.next() >>> 0) / 4294967296) /
                    (1 << 21);
                } while (0 === e);
                return e;
              }),
              (i.int32 = r.next),
              (i.quick = i),
              s &&
                (s.X && o(s, r),
                (i.state = function () {
                  return o(r, {});
                })),
              i
            );
          }
          t && t.exports
            ? (t.exports = s)
            : r && r.amd
            ? r(function () {
                return s;
              })
            : (this.xor4096 = s);
        })(0, "object" == typeof t && t, "function" == typeof define && define);
      },
      {},
    ],
    82: [
      function (e, t, r) {
        !(function (e, t, r) {
          function n(e) {
            var t = this;
            (t.next = function () {
              var e,
                r,
                n = t.x,
                o = t.i;
              return (
                (e = n[o]),
                (r = (e ^= e >>> 7) ^ (e << 24)),
                (r ^= (e = n[(o + 1) & 7]) ^ (e >>> 10)),
                (r ^= (e = n[(o + 3) & 7]) ^ (e >>> 3)),
                (r ^= (e = n[(o + 4) & 7]) ^ (e << 7)),
                (e = n[(o + 7) & 7]),
                (r ^= (e ^= e << 13) ^ (e << 9)),
                (n[o] = r),
                (t.i = (o + 1) & 7),
                r
              );
            }),
              (function (e, t) {
                var r,
                  n = [];
                if (t === (0 | t)) n[0] = t;
                else
                  for (t = "" + t, r = 0; r < t.length; ++r)
                    n[7 & r] =
                      (n[7 & r] << 15) ^
                      ((t.charCodeAt(r) + n[(r + 1) & 7]) << 13);
                for (; n.length < 8; ) n.push(0);
                for (r = 0; r < 8 && 0 === n[r]; ++r);
                for (
                  8 == r ? (n[7] = -1) : n[r], e.x = n, e.i = 0, r = 256;
                  r > 0;
                  --r
                )
                  e.next();
              })(t, e);
          }
          function o(e, t) {
            return (t.x = e.x.slice()), (t.i = e.i), t;
          }
          function s(e, t) {
            null == e && (e = +new Date());
            var r = new n(e),
              s = t && t.state,
              i = function () {
                return (r.next() >>> 0) / 4294967296;
              };
            return (
              (i.double = function () {
                do {
                  var e =
                    ((r.next() >>> 11) + (r.next() >>> 0) / 4294967296) /
                    (1 << 21);
                } while (0 === e);
                return e;
              }),
              (i.int32 = r.next),
              (i.quick = i),
              s &&
                (s.x && o(s, r),
                (i.state = function () {
                  return o(r, {});
                })),
              i
            );
          }
          t && t.exports
            ? (t.exports = s)
            : r && r.amd
            ? r(function () {
                return s;
              })
            : (this.xorshift7 = s);
        })(0, "object" == typeof t && t, "function" == typeof define && define);
      },
      {},
    ],
    83: [
      function (e, t, r) {
        !(function (e, t, r) {
          function n(e) {
            var t = this,
              r = "";
            (t.next = function () {
              var e = t.x ^ (t.x >>> 2);
              return (
                (t.x = t.y),
                (t.y = t.z),
                (t.z = t.w),
                (t.w = t.v),
                ((t.d = (t.d + 362437) | 0) +
                  (t.v = t.v ^ (t.v << 4) ^ e ^ (e << 1))) |
                  0
              );
            }),
              (t.x = 0),
              (t.y = 0),
              (t.z = 0),
              (t.w = 0),
              (t.v = 0),
              e === (0 | e) ? (t.x = e) : (r += e);
            for (var n = 0; n < r.length + 64; n++)
              (t.x ^= 0 | r.charCodeAt(n)),
                n == r.length && (t.d = (t.x << 10) ^ (t.x >>> 4)),
                t.next();
          }
          function o(e, t) {
            return (
              (t.x = e.x),
              (t.y = e.y),
              (t.z = e.z),
              (t.w = e.w),
              (t.v = e.v),
              (t.d = e.d),
              t
            );
          }
          function s(e, t) {
            var r = new n(e),
              s = t && t.state,
              i = function () {
                return (r.next() >>> 0) / 4294967296;
              };
            return (
              (i.double = function () {
                do {
                  var e =
                    ((r.next() >>> 11) + (r.next() >>> 0) / 4294967296) /
                    (1 << 21);
                } while (0 === e);
                return e;
              }),
              (i.int32 = r.next),
              (i.quick = i),
              s &&
                ("object" == typeof s && o(s, r),
                (i.state = function () {
                  return o(r, {});
                })),
              i
            );
          }
          t && t.exports
            ? (t.exports = s)
            : r && r.amd
            ? r(function () {
                return s;
              })
            : (this.xorwow = s);
        })(0, "object" == typeof t && t, "function" == typeof define && define);
      },
      {},
    ],
    84: [
      function (e, t, r) {
        !(function (r, n, o) {
          var s,
            i = 256,
            a = o.pow(i, 6),
            c = o.pow(2, 52),
            u = 2 * c,
            l = 255;
          function p(e, t, l) {
            var p = [],
              g = m(
                d(
                  (t = 1 == t ? { entropy: !0 } : t || {}).entropy
                    ? [e, x(n)]
                    : null == e
                    ? (function () {
                        try {
                          var e;
                          return (
                            s && (e = s.randomBytes)
                              ? (e = e(i))
                              : ((e = new Uint8Array(i)),
                                (r.crypto || r.msCrypto).getRandomValues(e)),
                            x(e)
                          );
                        } catch (e) {
                          var t = r.navigator,
                            o = t && t.plugins;
                          return [+new Date(), r, o, r.screen, x(n)];
                        }
                      })()
                    : e,
                  3
                ),
                p
              ),
              v = new h(p),
              b = function () {
                for (var e = v.g(6), t = a, r = 0; e < c; )
                  (e = (e + r) * i), (t *= i), (r = v.g(1));
                for (; e >= u; ) (e /= 2), (t /= 2), (r >>>= 1);
                return (e + r) / t;
              };
            return (
              (b.int32 = function () {
                return 0 | v.g(4);
              }),
              (b.quick = function () {
                return v.g(4) / 4294967296;
              }),
              (b.double = b),
              m(x(v.S), n),
              (
                t.pass ||
                l ||
                function (e, t, r, n) {
                  return (
                    n &&
                      (n.S && f(n, v),
                      (e.state = function () {
                        return f(v, {});
                      })),
                    r ? ((o.random = e), t) : e
                  );
                }
              )(b, g, "global" in t ? t.global : this == o, t.state)
            );
          }
          function h(e) {
            var t,
              r = e.length,
              n = this,
              o = 0,
              s = (n.i = n.j = 0),
              a = (n.S = []);
            for (r || (e = [r++]); o < i; ) a[o] = o++;
            for (o = 0; o < i; o++)
              (a[o] = a[(s = l & (s + e[o % r] + (t = a[o])))]), (a[s] = t);
            (n.g = function (e) {
              for (var t, r = 0, o = n.i, s = n.j, a = n.S; e--; )
                (t = a[(o = l & (o + 1))]),
                  (r =
                    r * i +
                    a[l & ((a[o] = a[(s = l & (s + t))]) + (a[s] = t))]);
              return (n.i = o), (n.j = s), r;
            })(i);
          }
          function f(e, t) {
            return (t.i = e.i), (t.j = e.j), (t.S = e.S.slice()), t;
          }
          function d(e, t) {
            var r,
              n = [],
              o = typeof e;
            if (t && "object" == o)
              for (r in e)
                try {
                  n.push(d(e[r], t - 1));
                } catch (e) {}
            return n.length ? n : "string" == o ? e : e + "\0";
          }
          function m(e, t) {
            for (var r, n = e + "", o = 0; o < n.length; )
              t[l & o] = l & ((r ^= 19 * t[l & o]) + n.charCodeAt(o++));
            return x(t);
          }
          function x(e) {
            return String.fromCharCode.apply(0, e);
          }
          if ((m(o.random(), n), "object" == typeof t && t.exports)) {
            t.exports = p;
            try {
              s = e("crypto");
            } catch (e) {}
          } else
            "function" == typeof define && define.amd
              ? define(function () {
                  return p;
                })
              : (o.seedrandom = p);
        })("undefined" != typeof self ? self : this, [], Math);
      },
      { crypto: 85 },
    ],
    85: [function (e, t, r) {}, {}],
  },
  {},
  [8]
);
